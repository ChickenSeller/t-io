// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main/resources/chat.proto

#ifndef PROTOBUF_main_2fresources_2fchat_2eproto__INCLUDED
#define PROTOBUF_main_2fresources_2fchat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace com {
namespace talent {
namespace aio {
namespace examples {
namespace im {
namespace common {
namespace packets {
class AuthReqBody;
class AuthReqBodyDefaultTypeInternal;
extern AuthReqBodyDefaultTypeInternal _AuthReqBody_default_instance_;
class AuthRespBody;
class AuthRespBodyDefaultTypeInternal;
extern AuthRespBodyDefaultTypeInternal _AuthRespBody_default_instance_;
class BeginToLiveReqBody;
class BeginToLiveReqBodyDefaultTypeInternal;
extern BeginToLiveReqBodyDefaultTypeInternal _BeginToLiveReqBody_default_instance_;
class BeginToLiveRespBody;
class BeginToLiveRespBodyDefaultTypeInternal;
extern BeginToLiveRespBodyDefaultTypeInternal _BeginToLiveRespBody_default_instance_;
class ChatReqBody;
class ChatReqBodyDefaultTypeInternal;
extern ChatReqBodyDefaultTypeInternal _ChatReqBody_default_instance_;
class ChatRespBody;
class ChatRespBodyDefaultTypeInternal;
extern ChatRespBodyDefaultTypeInternal _ChatRespBody_default_instance_;
class EndLiveReqBody;
class EndLiveReqBodyDefaultTypeInternal;
extern EndLiveReqBodyDefaultTypeInternal _EndLiveReqBody_default_instance_;
class EndLiveRespBody;
class EndLiveRespBodyDefaultTypeInternal;
extern EndLiveRespBodyDefaultTypeInternal _EndLiveRespBody_default_instance_;
class JoinReqBody;
class JoinReqBodyDefaultTypeInternal;
extern JoinReqBodyDefaultTypeInternal _JoinReqBody_default_instance_;
class JoinRespBody;
class JoinRespBodyDefaultTypeInternal;
extern JoinRespBodyDefaultTypeInternal _JoinRespBody_default_instance_;
}  // namespace packets
}  // namespace common
}  // namespace im
}  // namespace examples
}  // namespace aio
}  // namespace talent
}  // namespace com

namespace com {
namespace talent {
namespace aio {
namespace examples {
namespace im {
namespace common {
namespace packets {

namespace protobuf_main_2fresources_2fchat_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_main_2fresources_2fchat_2eproto

enum DeviceType {
  DEVICE_TYPE_UNKNOW = 0,
  DEVICE_TYPE_PC = 1,
  DEVICE_TYPE_ANDROID = 2,
  DEVICE_TYPE_IOS = 3,
  DeviceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeviceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeviceType_IsValid(int value);
const DeviceType DeviceType_MIN = DEVICE_TYPE_UNKNOW;
const DeviceType DeviceType_MAX = DEVICE_TYPE_IOS;
const int DeviceType_ARRAYSIZE = DeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeviceType_descriptor();
inline const ::std::string& DeviceType_Name(DeviceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeviceType_descriptor(), value);
}
inline bool DeviceType_Parse(
    const ::std::string& name, DeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceType>(
    DeviceType_descriptor(), name, value);
}
enum Command {
  COMMAND_UNKNOW = 0,
  COMMAND_HANDSHAKE_REQ = 1,
  COMMAND_HANDSHAKE_RESP = 2,
  COMMAND_AUTH_REQ = 3,
  COMMAND_AUTH_RESP = 4,
  COMMAND_JOIN_GROUP_REQ = 5,
  COMMAND_JOIN_GROUP_RESP = 6,
  COMMAND_JOIN_GROUP_NOTIFY_RESP = 7,
  COMMAND_CHAT_REQ = 8,
  COMMAND_CHAT_RESP = 9,
  COMMAND_START_SHOW_REQ = 10,
  COMMAND_START_SHOW_RESP = 11,
  COMMAND_END_SHOW_REQ = 12,
  COMMAND_END_SHOW_NOTIFY_RESP = 13,
  COMMAND_HEARTBEAT_REQ = 14,
  COMMAND_CLOSE_REQ = 15,
  Command_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Command_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Command_IsValid(int value);
const Command Command_MIN = COMMAND_UNKNOW;
const Command Command_MAX = COMMAND_CLOSE_REQ;
const int Command_ARRAYSIZE = Command_MAX + 1;

const ::google::protobuf::EnumDescriptor* Command_descriptor();
inline const ::std::string& Command_Name(Command value) {
  return ::google::protobuf::internal::NameOfEnum(
    Command_descriptor(), value);
}
inline bool Command_Parse(
    const ::std::string& name, Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Command>(
    Command_descriptor(), name, value);
}
enum JoinGroupResult {
  JOIN_GROUP_RESULT_UNKNOW = 0,
  JOIN_GROUP_RESULT_OK = 1,
  JOIN_GROUP_RESULT_NOT_EXIST = 2,
  JOIN_GROUP_RESULT_GROUP_FULL = 3,
  JOIN_GROUP_RESULT_IN_BACKLIST = 4,
  JOIN_GROUP_RESULT_TAKEOUTED = 5,
  JoinGroupResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  JoinGroupResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool JoinGroupResult_IsValid(int value);
const JoinGroupResult JoinGroupResult_MIN = JOIN_GROUP_RESULT_UNKNOW;
const JoinGroupResult JoinGroupResult_MAX = JOIN_GROUP_RESULT_TAKEOUTED;
const int JoinGroupResult_ARRAYSIZE = JoinGroupResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* JoinGroupResult_descriptor();
inline const ::std::string& JoinGroupResult_Name(JoinGroupResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    JoinGroupResult_descriptor(), value);
}
inline bool JoinGroupResult_Parse(
    const ::std::string& name, JoinGroupResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JoinGroupResult>(
    JoinGroupResult_descriptor(), name, value);
}
enum ChatType {
  CHAT_TYPE_UNKNOW = 0,
  CHAT_TYPE_PUBLIC = 1,
  CHAT_TYPE_PRIVATE = 2,
  ChatType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChatType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChatType_IsValid(int value);
const ChatType ChatType_MIN = CHAT_TYPE_UNKNOW;
const ChatType ChatType_MAX = CHAT_TYPE_PRIVATE;
const int ChatType_ARRAYSIZE = ChatType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatType_descriptor();
inline const ::std::string& ChatType_Name(ChatType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatType_descriptor(), value);
}
inline bool ChatType_Parse(
    const ::std::string& name, ChatType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatType>(
    ChatType_descriptor(), name, value);
}
// ===================================================================

class AuthReqBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.tio.examples.im.common.packets.AuthReqBody) */ {
 public:
  AuthReqBody();
  virtual ~AuthReqBody();

  AuthReqBody(const AuthReqBody& from);

  inline AuthReqBody& operator=(const AuthReqBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthReqBody& default_instance();

  static inline const AuthReqBody* internal_default_instance() {
    return reinterpret_cast<const AuthReqBody*>(
               &_AuthReqBody_default_instance_);
  }

  void Swap(AuthReqBody* other);

  // implements Message ----------------------------------------------

  inline AuthReqBody* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthReqBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthReqBody& from);
  void MergeFrom(const AuthReqBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthReqBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string deviceId = 2;
  void clear_deviceid();
  static const int kDeviceIdFieldNumber = 2;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // string token = 3;
  void clear_token();
  static const int kTokenFieldNumber = 3;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string cid = 5;
  void clear_cid();
  static const int kCidFieldNumber = 5;
  const ::std::string& cid() const;
  void set_cid(const ::std::string& value);
  #if LANG_CXX11
  void set_cid(::std::string&& value);
  #endif
  void set_cid(const char* value);
  void set_cid(const char* value, size_t size);
  ::std::string* mutable_cid();
  ::std::string* release_cid();
  void set_allocated_cid(::std::string* cid);

  // string appVersion = 6;
  void clear_appversion();
  static const int kAppVersionFieldNumber = 6;
  const ::std::string& appversion() const;
  void set_appversion(const ::std::string& value);
  #if LANG_CXX11
  void set_appversion(::std::string&& value);
  #endif
  void set_appversion(const char* value);
  void set_appversion(const char* value, size_t size);
  ::std::string* mutable_appversion();
  ::std::string* release_appversion();
  void set_allocated_appversion(::std::string* appversion);

  // string deviceInfo = 7;
  void clear_deviceinfo();
  static const int kDeviceInfoFieldNumber = 7;
  const ::std::string& deviceinfo() const;
  void set_deviceinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceinfo(::std::string&& value);
  #endif
  void set_deviceinfo(const char* value);
  void set_deviceinfo(const char* value, size_t size);
  ::std::string* mutable_deviceinfo();
  ::std::string* release_deviceinfo();
  void set_allocated_deviceinfo(::std::string* deviceinfo);

  // string sign = 9;
  void clear_sign();
  static const int kSignFieldNumber = 9;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const char* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int64 seq = 8;
  void clear_seq();
  static const int kSeqFieldNumber = 8;
  ::google::protobuf::int64 seq() const;
  void set_seq(::google::protobuf::int64 value);

  // .org.tio.examples.im.common.packets.DeviceType deviceType = 4;
  void clear_devicetype();
  static const int kDeviceTypeFieldNumber = 4;
  ::com::talent::aio::examples::im::common::packets::DeviceType devicetype() const;
  void set_devicetype(::com::talent::aio::examples::im::common::packets::DeviceType value);

  // @@protoc_insertion_point(class_scope:org.tio.examples.im.common.packets.AuthReqBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr cid_;
  ::google::protobuf::internal::ArenaStringPtr appversion_;
  ::google::protobuf::internal::ArenaStringPtr deviceinfo_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 seq_;
  int devicetype_;
  mutable int _cached_size_;
  friend struct  protobuf_main_2fresources_2fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthRespBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.tio.examples.im.common.packets.AuthRespBody) */ {
 public:
  AuthRespBody();
  virtual ~AuthRespBody();

  AuthRespBody(const AuthRespBody& from);

  inline AuthRespBody& operator=(const AuthRespBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRespBody& default_instance();

  static inline const AuthRespBody* internal_default_instance() {
    return reinterpret_cast<const AuthRespBody*>(
               &_AuthRespBody_default_instance_);
  }

  void Swap(AuthRespBody* other);

  // implements Message ----------------------------------------------

  inline AuthRespBody* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthRespBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthRespBody& from);
  void MergeFrom(const AuthRespBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthRespBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:org.tio.examples.im.common.packets.AuthRespBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  mutable int _cached_size_;
  friend struct  protobuf_main_2fresources_2fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinReqBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.tio.examples.im.common.packets.JoinReqBody) */ {
 public:
  JoinReqBody();
  virtual ~JoinReqBody();

  JoinReqBody(const JoinReqBody& from);

  inline JoinReqBody& operator=(const JoinReqBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinReqBody& default_instance();

  static inline const JoinReqBody* internal_default_instance() {
    return reinterpret_cast<const JoinReqBody*>(
               &_JoinReqBody_default_instance_);
  }

  void Swap(JoinReqBody* other);

  // implements Message ----------------------------------------------

  inline JoinReqBody* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinReqBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinReqBody& from);
  void MergeFrom(const JoinReqBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinReqBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string group = 2;
  void clear_group();
  static const int kGroupFieldNumber = 2;
  const ::std::string& group() const;
  void set_group(const ::std::string& value);
  #if LANG_CXX11
  void set_group(::std::string&& value);
  #endif
  void set_group(const char* value);
  void set_group(const char* value, size_t size);
  ::std::string* mutable_group();
  ::std::string* release_group();
  void set_allocated_group(::std::string* group);

  // int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:org.tio.examples.im.common.packets.JoinReqBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr group_;
  ::google::protobuf::int64 time_;
  mutable int _cached_size_;
  friend struct  protobuf_main_2fresources_2fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinRespBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.tio.examples.im.common.packets.JoinRespBody) */ {
 public:
  JoinRespBody();
  virtual ~JoinRespBody();

  JoinRespBody(const JoinRespBody& from);

  inline JoinRespBody& operator=(const JoinRespBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRespBody& default_instance();

  static inline const JoinRespBody* internal_default_instance() {
    return reinterpret_cast<const JoinRespBody*>(
               &_JoinRespBody_default_instance_);
  }

  void Swap(JoinRespBody* other);

  // implements Message ----------------------------------------------

  inline JoinRespBody* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinRespBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinRespBody& from);
  void MergeFrom(const JoinRespBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinRespBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string group = 3;
  void clear_group();
  static const int kGroupFieldNumber = 3;
  const ::std::string& group() const;
  void set_group(const ::std::string& value);
  #if LANG_CXX11
  void set_group(::std::string&& value);
  #endif
  void set_group(const char* value);
  void set_group(const char* value, size_t size);
  ::std::string* mutable_group();
  ::std::string* release_group();
  void set_allocated_group(::std::string* group);

  // int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // .org.tio.examples.im.common.packets.JoinGroupResult result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::com::talent::aio::examples::im::common::packets::JoinGroupResult result() const;
  void set_result(::com::talent::aio::examples::im::common::packets::JoinGroupResult value);

  // @@protoc_insertion_point(class_scope:org.tio.examples.im.common.packets.JoinRespBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr group_;
  ::google::protobuf::int64 time_;
  int result_;
  mutable int _cached_size_;
  friend struct  protobuf_main_2fresources_2fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatReqBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.tio.examples.im.common.packets.ChatReqBody) */ {
 public:
  ChatReqBody();
  virtual ~ChatReqBody();

  ChatReqBody(const ChatReqBody& from);

  inline ChatReqBody& operator=(const ChatReqBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatReqBody& default_instance();

  static inline const ChatReqBody* internal_default_instance() {
    return reinterpret_cast<const ChatReqBody*>(
               &_ChatReqBody_default_instance_);
  }

  void Swap(ChatReqBody* other);

  // implements Message ----------------------------------------------

  inline ChatReqBody* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatReqBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatReqBody& from);
  void MergeFrom(const ChatReqBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatReqBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 3;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // string group = 4;
  void clear_group();
  static const int kGroupFieldNumber = 4;
  const ::std::string& group() const;
  void set_group(const ::std::string& value);
  #if LANG_CXX11
  void set_group(::std::string&& value);
  #endif
  void set_group(const char* value);
  void set_group(const char* value, size_t size);
  ::std::string* mutable_group();
  ::std::string* release_group();
  void set_allocated_group(::std::string* group);

  // string toNick = 6;
  void clear_tonick();
  static const int kToNickFieldNumber = 6;
  const ::std::string& tonick() const;
  void set_tonick(const ::std::string& value);
  #if LANG_CXX11
  void set_tonick(::std::string&& value);
  #endif
  void set_tonick(const char* value);
  void set_tonick(const char* value, size_t size);
  ::std::string* mutable_tonick();
  ::std::string* release_tonick();
  void set_allocated_tonick(::std::string* tonick);

  // int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // .org.tio.examples.im.common.packets.ChatType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::com::talent::aio::examples::im::common::packets::ChatType type() const;
  void set_type(::com::talent::aio::examples::im::common::packets::ChatType value);

  // int32 toId = 5;
  void clear_toid();
  static const int kToIdFieldNumber = 5;
  ::google::protobuf::int32 toid() const;
  void set_toid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:org.tio.examples.im.common.packets.ChatReqBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr group_;
  ::google::protobuf::internal::ArenaStringPtr tonick_;
  ::google::protobuf::int64 time_;
  int type_;
  ::google::protobuf::int32 toid_;
  mutable int _cached_size_;
  friend struct  protobuf_main_2fresources_2fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatRespBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.tio.examples.im.common.packets.ChatRespBody) */ {
 public:
  ChatRespBody();
  virtual ~ChatRespBody();

  ChatRespBody(const ChatRespBody& from);

  inline ChatRespBody& operator=(const ChatRespBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRespBody& default_instance();

  static inline const ChatRespBody* internal_default_instance() {
    return reinterpret_cast<const ChatRespBody*>(
               &_ChatRespBody_default_instance_);
  }

  void Swap(ChatRespBody* other);

  // implements Message ----------------------------------------------

  inline ChatRespBody* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatRespBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatRespBody& from);
  void MergeFrom(const ChatRespBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatRespBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 3;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // string fromNick = 5;
  void clear_fromnick();
  static const int kFromNickFieldNumber = 5;
  const ::std::string& fromnick() const;
  void set_fromnick(const ::std::string& value);
  #if LANG_CXX11
  void set_fromnick(::std::string&& value);
  #endif
  void set_fromnick(const char* value);
  void set_fromnick(const char* value, size_t size);
  ::std::string* mutable_fromnick();
  ::std::string* release_fromnick();
  void set_allocated_fromnick(::std::string* fromnick);

  // string toNick = 7;
  void clear_tonick();
  static const int kToNickFieldNumber = 7;
  const ::std::string& tonick() const;
  void set_tonick(const ::std::string& value);
  #if LANG_CXX11
  void set_tonick(::std::string&& value);
  #endif
  void set_tonick(const char* value);
  void set_tonick(const char* value, size_t size);
  ::std::string* mutable_tonick();
  ::std::string* release_tonick();
  void set_allocated_tonick(::std::string* tonick);

  // string group = 8;
  void clear_group();
  static const int kGroupFieldNumber = 8;
  const ::std::string& group() const;
  void set_group(const ::std::string& value);
  #if LANG_CXX11
  void set_group(::std::string&& value);
  #endif
  void set_group(const char* value);
  void set_group(const char* value, size_t size);
  ::std::string* mutable_group();
  ::std::string* release_group();
  void set_allocated_group(::std::string* group);

  // int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // .org.tio.examples.im.common.packets.ChatType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::com::talent::aio::examples::im::common::packets::ChatType type() const;
  void set_type(::com::talent::aio::examples::im::common::packets::ChatType value);

  // int32 fromId = 4;
  void clear_fromid();
  static const int kFromIdFieldNumber = 4;
  ::google::protobuf::int32 fromid() const;
  void set_fromid(::google::protobuf::int32 value);

  // int32 toId = 6;
  void clear_toid();
  static const int kToIdFieldNumber = 6;
  ::google::protobuf::int32 toid() const;
  void set_toid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:org.tio.examples.im.common.packets.ChatRespBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr fromnick_;
  ::google::protobuf::internal::ArenaStringPtr tonick_;
  ::google::protobuf::internal::ArenaStringPtr group_;
  ::google::protobuf::int64 time_;
  int type_;
  ::google::protobuf::int32 fromid_;
  ::google::protobuf::int32 toid_;
  mutable int _cached_size_;
  friend struct  protobuf_main_2fresources_2fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BeginToLiveReqBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.tio.examples.im.common.packets.BeginToLiveReqBody) */ {
 public:
  BeginToLiveReqBody();
  virtual ~BeginToLiveReqBody();

  BeginToLiveReqBody(const BeginToLiveReqBody& from);

  inline BeginToLiveReqBody& operator=(const BeginToLiveReqBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginToLiveReqBody& default_instance();

  static inline const BeginToLiveReqBody* internal_default_instance() {
    return reinterpret_cast<const BeginToLiveReqBody*>(
               &_BeginToLiveReqBody_default_instance_);
  }

  void Swap(BeginToLiveReqBody* other);

  // implements Message ----------------------------------------------

  inline BeginToLiveReqBody* New() const PROTOBUF_FINAL { return New(NULL); }

  BeginToLiveReqBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BeginToLiveReqBody& from);
  void MergeFrom(const BeginToLiveReqBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BeginToLiveReqBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:org.tio.examples.im.common.packets.BeginToLiveReqBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  mutable int _cached_size_;
  friend struct  protobuf_main_2fresources_2fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BeginToLiveRespBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.tio.examples.im.common.packets.BeginToLiveRespBody) */ {
 public:
  BeginToLiveRespBody();
  virtual ~BeginToLiveRespBody();

  BeginToLiveRespBody(const BeginToLiveRespBody& from);

  inline BeginToLiveRespBody& operator=(const BeginToLiveRespBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginToLiveRespBody& default_instance();

  static inline const BeginToLiveRespBody* internal_default_instance() {
    return reinterpret_cast<const BeginToLiveRespBody*>(
               &_BeginToLiveRespBody_default_instance_);
  }

  void Swap(BeginToLiveRespBody* other);

  // implements Message ----------------------------------------------

  inline BeginToLiveRespBody* New() const PROTOBUF_FINAL { return New(NULL); }

  BeginToLiveRespBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BeginToLiveRespBody& from);
  void MergeFrom(const BeginToLiveRespBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BeginToLiveRespBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string rtmppublishurl = 3;
  void clear_rtmppublishurl();
  static const int kRtmppublishurlFieldNumber = 3;
  const ::std::string& rtmppublishurl() const;
  void set_rtmppublishurl(const ::std::string& value);
  #if LANG_CXX11
  void set_rtmppublishurl(::std::string&& value);
  #endif
  void set_rtmppublishurl(const char* value);
  void set_rtmppublishurl(const char* value, size_t size);
  ::std::string* mutable_rtmppublishurl();
  ::std::string* release_rtmppublishurl();
  void set_allocated_rtmppublishurl(::std::string* rtmppublishurl);

  // string rtmpliveurl = 4;
  void clear_rtmpliveurl();
  static const int kRtmpliveurlFieldNumber = 4;
  const ::std::string& rtmpliveurl() const;
  void set_rtmpliveurl(const ::std::string& value);
  #if LANG_CXX11
  void set_rtmpliveurl(::std::string&& value);
  #endif
  void set_rtmpliveurl(const char* value);
  void set_rtmpliveurl(const char* value, size_t size);
  ::std::string* mutable_rtmpliveurl();
  ::std::string* release_rtmpliveurl();
  void set_allocated_rtmpliveurl(::std::string* rtmpliveurl);

  // int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int64 liveid = 2;
  void clear_liveid();
  static const int kLiveidFieldNumber = 2;
  ::google::protobuf::int64 liveid() const;
  void set_liveid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:org.tio.examples.im.common.packets.BeginToLiveRespBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr rtmppublishurl_;
  ::google::protobuf::internal::ArenaStringPtr rtmpliveurl_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 liveid_;
  mutable int _cached_size_;
  friend struct  protobuf_main_2fresources_2fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndLiveReqBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.tio.examples.im.common.packets.EndLiveReqBody) */ {
 public:
  EndLiveReqBody();
  virtual ~EndLiveReqBody();

  EndLiveReqBody(const EndLiveReqBody& from);

  inline EndLiveReqBody& operator=(const EndLiveReqBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndLiveReqBody& default_instance();

  static inline const EndLiveReqBody* internal_default_instance() {
    return reinterpret_cast<const EndLiveReqBody*>(
               &_EndLiveReqBody_default_instance_);
  }

  void Swap(EndLiveReqBody* other);

  // implements Message ----------------------------------------------

  inline EndLiveReqBody* New() const PROTOBUF_FINAL { return New(NULL); }

  EndLiveReqBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EndLiveReqBody& from);
  void MergeFrom(const EndLiveReqBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EndLiveReqBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:org.tio.examples.im.common.packets.EndLiveReqBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  mutable int _cached_size_;
  friend struct  protobuf_main_2fresources_2fchat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndLiveRespBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.tio.examples.im.common.packets.EndLiveRespBody) */ {
 public:
  EndLiveRespBody();
  virtual ~EndLiveRespBody();

  EndLiveRespBody(const EndLiveRespBody& from);

  inline EndLiveRespBody& operator=(const EndLiveRespBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndLiveRespBody& default_instance();

  static inline const EndLiveRespBody* internal_default_instance() {
    return reinterpret_cast<const EndLiveRespBody*>(
               &_EndLiveRespBody_default_instance_);
  }

  void Swap(EndLiveRespBody* other);

  // implements Message ----------------------------------------------

  inline EndLiveRespBody* New() const PROTOBUF_FINAL { return New(NULL); }

  EndLiveRespBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EndLiveRespBody& from);
  void MergeFrom(const EndLiveRespBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EndLiveRespBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int64 liveid = 2;
  void clear_liveid();
  static const int kLiveidFieldNumber = 2;
  ::google::protobuf::int64 liveid() const;
  void set_liveid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:org.tio.examples.im.common.packets.EndLiveRespBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 liveid_;
  mutable int _cached_size_;
  friend struct  protobuf_main_2fresources_2fchat_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthReqBody

// int64 time = 1;
inline void AuthReqBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AuthReqBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.time)
  return time_;
}
inline void AuthReqBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.time)
}

// string deviceId = 2;
inline void AuthReqBody::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthReqBody::deviceid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
  return deviceid_.GetNoArena();
}
inline void AuthReqBody::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
}
#if LANG_CXX11
inline void AuthReqBody::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
}
#endif
inline void AuthReqBody::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
}
inline void AuthReqBody::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
}
inline ::std::string* AuthReqBody::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthReqBody::release_deviceid() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthReqBody::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
}

// string token = 3;
inline void AuthReqBody::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthReqBody::token() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.token)
  return token_.GetNoArena();
}
inline void AuthReqBody::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.token)
}
#if LANG_CXX11
inline void AuthReqBody::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.token)
}
#endif
inline void AuthReqBody::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.token)
}
inline void AuthReqBody::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.token)
}
inline ::std::string* AuthReqBody::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthReqBody::release_token() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthReqBody::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.token)
}

// .org.tio.examples.im.common.packets.DeviceType deviceType = 4;
inline void AuthReqBody::clear_devicetype() {
  devicetype_ = 0;
}
inline ::com::talent::aio::examples::im::common::packets::DeviceType AuthReqBody::devicetype() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.deviceType)
  return static_cast< ::com::talent::aio::examples::im::common::packets::DeviceType >(devicetype_);
}
inline void AuthReqBody::set_devicetype(::com::talent::aio::examples::im::common::packets::DeviceType value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.deviceType)
}

// string cid = 5;
inline void AuthReqBody::clear_cid() {
  cid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthReqBody::cid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.cid)
  return cid_.GetNoArena();
}
inline void AuthReqBody::set_cid(const ::std::string& value) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.cid)
}
#if LANG_CXX11
inline void AuthReqBody::set_cid(::std::string&& value) {
  
  cid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.cid)
}
#endif
inline void AuthReqBody::set_cid(const char* value) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.cid)
}
inline void AuthReqBody::set_cid(const char* value, size_t size) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.cid)
}
inline ::std::string* AuthReqBody::mutable_cid() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.cid)
  return cid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthReqBody::release_cid() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.cid)
  
  return cid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthReqBody::set_allocated_cid(::std::string* cid) {
  if (cid != NULL) {
    
  } else {
    
  }
  cid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cid);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.cid)
}

// string appVersion = 6;
inline void AuthReqBody::clear_appversion() {
  appversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthReqBody::appversion() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
  return appversion_.GetNoArena();
}
inline void AuthReqBody::set_appversion(const ::std::string& value) {
  
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
}
#if LANG_CXX11
inline void AuthReqBody::set_appversion(::std::string&& value) {
  
  appversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
}
#endif
inline void AuthReqBody::set_appversion(const char* value) {
  
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
}
inline void AuthReqBody::set_appversion(const char* value, size_t size) {
  
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
}
inline ::std::string* AuthReqBody::mutable_appversion() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
  return appversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthReqBody::release_appversion() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
  
  return appversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthReqBody::set_allocated_appversion(::std::string* appversion) {
  if (appversion != NULL) {
    
  } else {
    
  }
  appversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appversion);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
}

// string deviceInfo = 7;
inline void AuthReqBody::clear_deviceinfo() {
  deviceinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthReqBody::deviceinfo() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
  return deviceinfo_.GetNoArena();
}
inline void AuthReqBody::set_deviceinfo(const ::std::string& value) {
  
  deviceinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
}
#if LANG_CXX11
inline void AuthReqBody::set_deviceinfo(::std::string&& value) {
  
  deviceinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
}
#endif
inline void AuthReqBody::set_deviceinfo(const char* value) {
  
  deviceinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
}
inline void AuthReqBody::set_deviceinfo(const char* value, size_t size) {
  
  deviceinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
}
inline ::std::string* AuthReqBody::mutable_deviceinfo() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
  return deviceinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthReqBody::release_deviceinfo() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
  
  return deviceinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthReqBody::set_allocated_deviceinfo(::std::string* deviceinfo) {
  if (deviceinfo != NULL) {
    
  } else {
    
  }
  deviceinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceinfo);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
}

// int64 seq = 8;
inline void AuthReqBody::clear_seq() {
  seq_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AuthReqBody::seq() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.seq)
  return seq_;
}
inline void AuthReqBody::set_seq(::google::protobuf::int64 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.seq)
}

// string sign = 9;
inline void AuthReqBody::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthReqBody::sign() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.sign)
  return sign_.GetNoArena();
}
inline void AuthReqBody::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.sign)
}
#if LANG_CXX11
inline void AuthReqBody::set_sign(::std::string&& value) {
  
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.sign)
}
#endif
inline void AuthReqBody::set_sign(const char* value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.sign)
}
inline void AuthReqBody::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.sign)
}
inline ::std::string* AuthReqBody::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthReqBody::release_sign() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthReqBody::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.sign)
}

// -------------------------------------------------------------------

// AuthRespBody

// int64 time = 1;
inline void AuthRespBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AuthRespBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthRespBody.time)
  return time_;
}
inline void AuthRespBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthRespBody.time)
}

// -------------------------------------------------------------------

// JoinReqBody

// int64 time = 1;
inline void JoinReqBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 JoinReqBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.JoinReqBody.time)
  return time_;
}
inline void JoinReqBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.JoinReqBody.time)
}

// string group = 2;
inline void JoinReqBody::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinReqBody::group() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.JoinReqBody.group)
  return group_.GetNoArena();
}
inline void JoinReqBody::set_group(const ::std::string& value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.JoinReqBody.group)
}
#if LANG_CXX11
inline void JoinReqBody::set_group(::std::string&& value) {
  
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.JoinReqBody.group)
}
#endif
inline void JoinReqBody::set_group(const char* value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.JoinReqBody.group)
}
inline void JoinReqBody::set_group(const char* value, size_t size) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.JoinReqBody.group)
}
inline ::std::string* JoinReqBody::mutable_group() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.JoinReqBody.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinReqBody::release_group() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.JoinReqBody.group)
  
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinReqBody::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    
  } else {
    
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.JoinReqBody.group)
}

// -------------------------------------------------------------------

// JoinRespBody

// int64 time = 1;
inline void JoinRespBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 JoinRespBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.JoinRespBody.time)
  return time_;
}
inline void JoinRespBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.JoinRespBody.time)
}

// .org.tio.examples.im.common.packets.JoinGroupResult result = 2;
inline void JoinRespBody::clear_result() {
  result_ = 0;
}
inline ::com::talent::aio::examples::im::common::packets::JoinGroupResult JoinRespBody::result() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.JoinRespBody.result)
  return static_cast< ::com::talent::aio::examples::im::common::packets::JoinGroupResult >(result_);
}
inline void JoinRespBody::set_result(::com::talent::aio::examples::im::common::packets::JoinGroupResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.JoinRespBody.result)
}

// string group = 3;
inline void JoinRespBody::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinRespBody::group() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.JoinRespBody.group)
  return group_.GetNoArena();
}
inline void JoinRespBody::set_group(const ::std::string& value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.JoinRespBody.group)
}
#if LANG_CXX11
inline void JoinRespBody::set_group(::std::string&& value) {
  
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.JoinRespBody.group)
}
#endif
inline void JoinRespBody::set_group(const char* value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.JoinRespBody.group)
}
inline void JoinRespBody::set_group(const char* value, size_t size) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.JoinRespBody.group)
}
inline ::std::string* JoinRespBody::mutable_group() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.JoinRespBody.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinRespBody::release_group() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.JoinRespBody.group)
  
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinRespBody::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    
  } else {
    
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.JoinRespBody.group)
}

// -------------------------------------------------------------------

// ChatReqBody

// int64 time = 1;
inline void ChatReqBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ChatReqBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.time)
  return time_;
}
inline void ChatReqBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.time)
}

// .org.tio.examples.im.common.packets.ChatType type = 2;
inline void ChatReqBody::clear_type() {
  type_ = 0;
}
inline ::com::talent::aio::examples::im::common::packets::ChatType ChatReqBody::type() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.type)
  return static_cast< ::com::talent::aio::examples::im::common::packets::ChatType >(type_);
}
inline void ChatReqBody::set_type(::com::talent::aio::examples::im::common::packets::ChatType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.type)
}

// string text = 3;
inline void ChatReqBody::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatReqBody::text() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.text)
  return text_.GetNoArena();
}
inline void ChatReqBody::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.text)
}
#if LANG_CXX11
inline void ChatReqBody::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatReqBody.text)
}
#endif
inline void ChatReqBody::set_text(const char* value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatReqBody.text)
}
inline void ChatReqBody::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatReqBody.text)
}
inline ::std::string* ChatReqBody::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatReqBody.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatReqBody::release_text() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatReqBody.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatReqBody::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatReqBody.text)
}

// string group = 4;
inline void ChatReqBody::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatReqBody::group() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.group)
  return group_.GetNoArena();
}
inline void ChatReqBody::set_group(const ::std::string& value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.group)
}
#if LANG_CXX11
inline void ChatReqBody::set_group(::std::string&& value) {
  
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatReqBody.group)
}
#endif
inline void ChatReqBody::set_group(const char* value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatReqBody.group)
}
inline void ChatReqBody::set_group(const char* value, size_t size) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatReqBody.group)
}
inline ::std::string* ChatReqBody::mutable_group() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatReqBody.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatReqBody::release_group() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatReqBody.group)
  
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatReqBody::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    
  } else {
    
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatReqBody.group)
}

// int32 toId = 5;
inline void ChatReqBody::clear_toid() {
  toid_ = 0;
}
inline ::google::protobuf::int32 ChatReqBody::toid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.toId)
  return toid_;
}
inline void ChatReqBody::set_toid(::google::protobuf::int32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.toId)
}

// string toNick = 6;
inline void ChatReqBody::clear_tonick() {
  tonick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatReqBody::tonick() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.toNick)
  return tonick_.GetNoArena();
}
inline void ChatReqBody::set_tonick(const ::std::string& value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.toNick)
}
#if LANG_CXX11
inline void ChatReqBody::set_tonick(::std::string&& value) {
  
  tonick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatReqBody.toNick)
}
#endif
inline void ChatReqBody::set_tonick(const char* value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatReqBody.toNick)
}
inline void ChatReqBody::set_tonick(const char* value, size_t size) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatReqBody.toNick)
}
inline ::std::string* ChatReqBody::mutable_tonick() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatReqBody.toNick)
  return tonick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatReqBody::release_tonick() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatReqBody.toNick)
  
  return tonick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatReqBody::set_allocated_tonick(::std::string* tonick) {
  if (tonick != NULL) {
    
  } else {
    
  }
  tonick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tonick);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatReqBody.toNick)
}

// -------------------------------------------------------------------

// ChatRespBody

// int64 time = 1;
inline void ChatRespBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ChatRespBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.time)
  return time_;
}
inline void ChatRespBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.time)
}

// .org.tio.examples.im.common.packets.ChatType type = 2;
inline void ChatRespBody::clear_type() {
  type_ = 0;
}
inline ::com::talent::aio::examples::im::common::packets::ChatType ChatRespBody::type() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.type)
  return static_cast< ::com::talent::aio::examples::im::common::packets::ChatType >(type_);
}
inline void ChatRespBody::set_type(::com::talent::aio::examples::im::common::packets::ChatType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.type)
}

// string text = 3;
inline void ChatRespBody::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatRespBody::text() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.text)
  return text_.GetNoArena();
}
inline void ChatRespBody::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.text)
}
#if LANG_CXX11
inline void ChatRespBody::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatRespBody.text)
}
#endif
inline void ChatRespBody::set_text(const char* value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatRespBody.text)
}
inline void ChatRespBody::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatRespBody.text)
}
inline ::std::string* ChatRespBody::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatRespBody.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatRespBody::release_text() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatRespBody.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatRespBody::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatRespBody.text)
}

// int32 fromId = 4;
inline void ChatRespBody::clear_fromid() {
  fromid_ = 0;
}
inline ::google::protobuf::int32 ChatRespBody::fromid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.fromId)
  return fromid_;
}
inline void ChatRespBody::set_fromid(::google::protobuf::int32 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.fromId)
}

// string fromNick = 5;
inline void ChatRespBody::clear_fromnick() {
  fromnick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatRespBody::fromnick() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
  return fromnick_.GetNoArena();
}
inline void ChatRespBody::set_fromnick(const ::std::string& value) {
  
  fromnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
}
#if LANG_CXX11
inline void ChatRespBody::set_fromnick(::std::string&& value) {
  
  fromnick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
}
#endif
inline void ChatRespBody::set_fromnick(const char* value) {
  
  fromnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
}
inline void ChatRespBody::set_fromnick(const char* value, size_t size) {
  
  fromnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
}
inline ::std::string* ChatRespBody::mutable_fromnick() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
  return fromnick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatRespBody::release_fromnick() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
  
  return fromnick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatRespBody::set_allocated_fromnick(::std::string* fromnick) {
  if (fromnick != NULL) {
    
  } else {
    
  }
  fromnick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromnick);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
}

// int32 toId = 6;
inline void ChatRespBody::clear_toid() {
  toid_ = 0;
}
inline ::google::protobuf::int32 ChatRespBody::toid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.toId)
  return toid_;
}
inline void ChatRespBody::set_toid(::google::protobuf::int32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.toId)
}

// string toNick = 7;
inline void ChatRespBody::clear_tonick() {
  tonick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatRespBody::tonick() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.toNick)
  return tonick_.GetNoArena();
}
inline void ChatRespBody::set_tonick(const ::std::string& value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.toNick)
}
#if LANG_CXX11
inline void ChatRespBody::set_tonick(::std::string&& value) {
  
  tonick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatRespBody.toNick)
}
#endif
inline void ChatRespBody::set_tonick(const char* value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatRespBody.toNick)
}
inline void ChatRespBody::set_tonick(const char* value, size_t size) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatRespBody.toNick)
}
inline ::std::string* ChatRespBody::mutable_tonick() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatRespBody.toNick)
  return tonick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatRespBody::release_tonick() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatRespBody.toNick)
  
  return tonick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatRespBody::set_allocated_tonick(::std::string* tonick) {
  if (tonick != NULL) {
    
  } else {
    
  }
  tonick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tonick);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatRespBody.toNick)
}

// string group = 8;
inline void ChatRespBody::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatRespBody::group() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.group)
  return group_.GetNoArena();
}
inline void ChatRespBody::set_group(const ::std::string& value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.group)
}
#if LANG_CXX11
inline void ChatRespBody::set_group(::std::string&& value) {
  
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatRespBody.group)
}
#endif
inline void ChatRespBody::set_group(const char* value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatRespBody.group)
}
inline void ChatRespBody::set_group(const char* value, size_t size) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatRespBody.group)
}
inline ::std::string* ChatRespBody::mutable_group() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatRespBody.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatRespBody::release_group() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatRespBody.group)
  
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatRespBody::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    
  } else {
    
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatRespBody.group)
}

// -------------------------------------------------------------------

// BeginToLiveReqBody

// int64 time = 1;
inline void BeginToLiveReqBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BeginToLiveReqBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.BeginToLiveReqBody.time)
  return time_;
}
inline void BeginToLiveReqBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.BeginToLiveReqBody.time)
}

// -------------------------------------------------------------------

// BeginToLiveRespBody

// int64 time = 1;
inline void BeginToLiveRespBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BeginToLiveRespBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.BeginToLiveRespBody.time)
  return time_;
}
inline void BeginToLiveRespBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.BeginToLiveRespBody.time)
}

// int64 liveid = 2;
inline void BeginToLiveRespBody::clear_liveid() {
  liveid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BeginToLiveRespBody::liveid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.BeginToLiveRespBody.liveid)
  return liveid_;
}
inline void BeginToLiveRespBody::set_liveid(::google::protobuf::int64 value) {
  
  liveid_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.BeginToLiveRespBody.liveid)
}

// string rtmppublishurl = 3;
inline void BeginToLiveRespBody::clear_rtmppublishurl() {
  rtmppublishurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BeginToLiveRespBody::rtmppublishurl() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
  return rtmppublishurl_.GetNoArena();
}
inline void BeginToLiveRespBody::set_rtmppublishurl(const ::std::string& value) {
  
  rtmppublishurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
}
#if LANG_CXX11
inline void BeginToLiveRespBody::set_rtmppublishurl(::std::string&& value) {
  
  rtmppublishurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
}
#endif
inline void BeginToLiveRespBody::set_rtmppublishurl(const char* value) {
  
  rtmppublishurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
}
inline void BeginToLiveRespBody::set_rtmppublishurl(const char* value, size_t size) {
  
  rtmppublishurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
}
inline ::std::string* BeginToLiveRespBody::mutable_rtmppublishurl() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
  return rtmppublishurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BeginToLiveRespBody::release_rtmppublishurl() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
  
  return rtmppublishurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BeginToLiveRespBody::set_allocated_rtmppublishurl(::std::string* rtmppublishurl) {
  if (rtmppublishurl != NULL) {
    
  } else {
    
  }
  rtmppublishurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rtmppublishurl);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
}

// string rtmpliveurl = 4;
inline void BeginToLiveRespBody::clear_rtmpliveurl() {
  rtmpliveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BeginToLiveRespBody::rtmpliveurl() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
  return rtmpliveurl_.GetNoArena();
}
inline void BeginToLiveRespBody::set_rtmpliveurl(const ::std::string& value) {
  
  rtmpliveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
}
#if LANG_CXX11
inline void BeginToLiveRespBody::set_rtmpliveurl(::std::string&& value) {
  
  rtmpliveurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
}
#endif
inline void BeginToLiveRespBody::set_rtmpliveurl(const char* value) {
  
  rtmpliveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
}
inline void BeginToLiveRespBody::set_rtmpliveurl(const char* value, size_t size) {
  
  rtmpliveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
}
inline ::std::string* BeginToLiveRespBody::mutable_rtmpliveurl() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
  return rtmpliveurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BeginToLiveRespBody::release_rtmpliveurl() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
  
  return rtmpliveurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BeginToLiveRespBody::set_allocated_rtmpliveurl(::std::string* rtmpliveurl) {
  if (rtmpliveurl != NULL) {
    
  } else {
    
  }
  rtmpliveurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rtmpliveurl);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
}

// -------------------------------------------------------------------

// EndLiveReqBody

// int64 time = 1;
inline void EndLiveReqBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EndLiveReqBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.EndLiveReqBody.time)
  return time_;
}
inline void EndLiveReqBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.EndLiveReqBody.time)
}

// -------------------------------------------------------------------

// EndLiveRespBody

// int64 time = 1;
inline void EndLiveRespBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EndLiveRespBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.EndLiveRespBody.time)
  return time_;
}
inline void EndLiveRespBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.EndLiveRespBody.time)
}

// int64 liveid = 2;
inline void EndLiveRespBody::clear_liveid() {
  liveid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EndLiveRespBody::liveid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.EndLiveRespBody.liveid)
  return liveid_;
}
inline void EndLiveRespBody::set_liveid(::google::protobuf::int64 value) {
  
  liveid_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.EndLiveRespBody.liveid)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace packets
}  // namespace common
}  // namespace im
}  // namespace examples
}  // namespace aio
}  // namespace talent
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::talent::aio::examples::im::common::packets::DeviceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::talent::aio::examples::im::common::packets::DeviceType>() {
  return ::com::talent::aio::examples::im::common::packets::DeviceType_descriptor();
}
template <> struct is_proto_enum< ::com::talent::aio::examples::im::common::packets::Command> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::talent::aio::examples::im::common::packets::Command>() {
  return ::com::talent::aio::examples::im::common::packets::Command_descriptor();
}
template <> struct is_proto_enum< ::com::talent::aio::examples::im::common::packets::JoinGroupResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::talent::aio::examples::im::common::packets::JoinGroupResult>() {
  return ::com::talent::aio::examples::im::common::packets::JoinGroupResult_descriptor();
}
template <> struct is_proto_enum< ::com::talent::aio::examples::im::common::packets::ChatType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::talent::aio::examples::im::common::packets::ChatType>() {
  return ::com::talent::aio::examples::im::common::packets::ChatType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_main_2fresources_2fchat_2eproto__INCLUDED
