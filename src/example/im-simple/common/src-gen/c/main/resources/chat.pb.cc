// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main/resources/chat.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "main/resources/chat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace talent {
namespace aio {
namespace examples {
namespace im {
namespace common {
namespace packets {
class AuthReqBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AuthReqBody> {
} _AuthReqBody_default_instance_;
class AuthRespBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AuthRespBody> {
} _AuthRespBody_default_instance_;
class JoinReqBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JoinReqBody> {
} _JoinReqBody_default_instance_;
class JoinRespBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JoinRespBody> {
} _JoinRespBody_default_instance_;
class ChatReqBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ChatReqBody> {
} _ChatReqBody_default_instance_;
class ChatRespBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ChatRespBody> {
} _ChatRespBody_default_instance_;
class BeginToLiveReqBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BeginToLiveReqBody> {
} _BeginToLiveReqBody_default_instance_;
class BeginToLiveRespBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BeginToLiveRespBody> {
} _BeginToLiveRespBody_default_instance_;
class EndLiveReqBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EndLiveReqBody> {
} _EndLiveReqBody_default_instance_;
class EndLiveRespBodyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EndLiveRespBody> {
} _EndLiveRespBody_default_instance_;

namespace protobuf_main_2fresources_2fchat_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthReqBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthReqBody, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthReqBody, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthReqBody, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthReqBody, devicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthReqBody, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthReqBody, appversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthReqBody, deviceinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthReqBody, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthReqBody, sign_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthRespBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthRespBody, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinReqBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinReqBody, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinReqBody, group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRespBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRespBody, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRespBody, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRespBody, group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReqBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReqBody, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReqBody, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReqBody, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReqBody, group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReqBody, toid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatReqBody, tonick_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRespBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRespBody, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRespBody, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRespBody, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRespBody, fromid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRespBody, fromnick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRespBody, toid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRespBody, tonick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRespBody, group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginToLiveReqBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginToLiveReqBody, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginToLiveRespBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginToLiveRespBody, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginToLiveRespBody, liveid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginToLiveRespBody, rtmppublishurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginToLiveRespBody, rtmpliveurl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndLiveReqBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndLiveReqBody, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndLiveRespBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndLiveRespBody, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndLiveRespBody, liveid_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(AuthReqBody)},
  { 13, -1, sizeof(AuthRespBody)},
  { 18, -1, sizeof(JoinReqBody)},
  { 24, -1, sizeof(JoinRespBody)},
  { 31, -1, sizeof(ChatReqBody)},
  { 41, -1, sizeof(ChatRespBody)},
  { 53, -1, sizeof(BeginToLiveReqBody)},
  { 58, -1, sizeof(BeginToLiveRespBody)},
  { 66, -1, sizeof(EndLiveReqBody)},
  { 71, -1, sizeof(EndLiveRespBody)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AuthReqBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AuthRespBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JoinReqBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JoinRespBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatReqBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatRespBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BeginToLiveReqBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BeginToLiveRespBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EndLiveReqBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EndLiveRespBody_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "main/resources/chat.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace

void TableStruct::Shutdown() {
  _AuthReqBody_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _AuthRespBody_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _JoinReqBody_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _JoinRespBody_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ChatReqBody_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ChatRespBody_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _BeginToLiveReqBody_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _BeginToLiveRespBody_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _EndLiveReqBody_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _EndLiveRespBody_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AuthReqBody_default_instance_.DefaultConstruct();
  _AuthRespBody_default_instance_.DefaultConstruct();
  _JoinReqBody_default_instance_.DefaultConstruct();
  _JoinRespBody_default_instance_.DefaultConstruct();
  _ChatReqBody_default_instance_.DefaultConstruct();
  _ChatRespBody_default_instance_.DefaultConstruct();
  _BeginToLiveReqBody_default_instance_.DefaultConstruct();
  _BeginToLiveRespBody_default_instance_.DefaultConstruct();
  _EndLiveReqBody_default_instance_.DefaultConstruct();
  _EndLiveRespBody_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031main/resources/chat.proto\022)com.talent."
      "aio.examples.im.common.packets\"\327\001\n\013AuthR"
      "eqBody\022\014\n\004time\030\001 \001(\003\022\020\n\010deviceId\030\002 \001(\t\022\r"
      "\n\005token\030\003 \001(\t\022I\n\ndeviceType\030\004 \001(\01625.com."
      "tio.examples.im.common.packets.De"
      "viceType\022\013\n\003cid\030\005 \001(\t\022\022\n\nappVersion\030\006 \001("
      "\t\022\022\n\ndeviceInfo\030\007 \001(\t\022\013\n\003seq\030\010 \001(\003\022\014\n\004si"
      "gn\030\t \001(\t\"\034\n\014AuthRespBody\022\014\n\004time\030\001 \001(\003\"*"
      "\n\013JoinReqBody\022\014\n\004time\030\001 \001(\003\022\r\n\005group\030\002 \001"
      "(\t\"w\n\014JoinRespBody\022\014\n\004time\030\001 \001(\003\022J\n\006resu"
      "lt\030\002 \001(\0162:.org.tio.examples.im.co"
      "mmon.packets.JoinGroupResult\022\r\n\005group\030\003 "
      "\001(\t\"\231\001\n\013ChatReqBody\022\014\n\004time\030\001 \001(\003\022A\n\004typ"
      "e\030\002 \001(\01623.org.tio.examples.im.com"
      "mon.packets.ChatType\022\014\n\004text\030\003 \001(\t\022\r\n\005gr"
      "oup\030\004 \001(\t\022\014\n\004toId\030\005 \001(\005\022\016\n\006toNick\030\006 \001(\t\""
      "\274\001\n\014ChatRespBody\022\014\n\004time\030\001 \001(\003\022A\n\004type\030\002"
      " \001(\01623.org.tio.examples.im.common"
      ".packets.ChatType\022\014\n\004text\030\003 \001(\t\022\016\n\006fromI"
      "d\030\004 \001(\005\022\020\n\010fromNick\030\005 \001(\t\022\014\n\004toId\030\006 \001(\005\022"
      "\016\n\006toNick\030\007 \001(\t\022\r\n\005group\030\010 \001(\t\"\"\n\022BeginT"
      "oLiveReqBody\022\014\n\004time\030\001 \001(\003\"`\n\023BeginToLiv"
      "eRespBody\022\014\n\004time\030\001 \001(\003\022\016\n\006liveid\030\002 \001(\003\022"
      "\026\n\016rtmppublishurl\030\003 \001(\t\022\023\n\013rtmpliveurl\030\004"
      " \001(\t\"\036\n\016EndLiveReqBody\022\014\n\004time\030\001 \001(\003\"/\n\017"
      "EndLiveRespBody\022\014\n\004time\030\001 \001(\003\022\016\n\006liveid\030"
      "\002 \001(\003*f\n\nDeviceType\022\026\n\022DEVICE_TYPE_UNKNO"
      "W\020\000\022\022\n\016DEVICE_TYPE_PC\020\001\022\027\n\023DEVICE_TYPE_A"
      "NDROID\020\002\022\023\n\017DEVICE_TYPE_IOS\020\003*\262\003\n\007Comman"
      "d\022\022\n\016COMMAND_UNKNOW\020\000\022\031\n\025COMMAND_HANDSHA"
      "KE_REQ\020\001\022\032\n\026COMMAND_HANDSHAKE_RESP\020\002\022\024\n\020"
      "COMMAND_AUTH_REQ\020\003\022\025\n\021COMMAND_AUTH_RESP\020"
      "\004\022\032\n\026COMMAND_JOIN_GROUP_REQ\020\005\022\033\n\027COMMAND"
      "_JOIN_GROUP_RESP\020\006\022\"\n\036COMMAND_JOIN_GROUP"
      "_NOTIFY_RESP\020\007\022\024\n\020COMMAND_CHAT_REQ\020\010\022\025\n\021"
      "COMMAND_CHAT_RESP\020\t\022\032\n\026COMMAND_START_SHO"
      "W_REQ\020\n\022\033\n\027COMMAND_START_SHOW_RESP\020\013\022\030\n\024"
      "COMMAND_END_SHOW_REQ\020\014\022 \n\034COMMAND_END_SH"
      "OW_NOTIFY_RESP\020\r\022\031\n\025COMMAND_HEARTBEAT_RE"
      "Q\020\016\022\025\n\021COMMAND_CLOSE_REQ\020\017*\320\001\n\017JoinGroup"
      "Result\022\034\n\030JOIN_GROUP_RESULT_UNKNOW\020\000\022\030\n\024"
      "JOIN_GROUP_RESULT_OK\020\001\022\037\n\033JOIN_GROUP_RES"
      "ULT_NOT_EXIST\020\002\022 \n\034JOIN_GROUP_RESULT_GRO"
      "UP_FULL\020\003\022!\n\035JOIN_GROUP_RESULT_IN_BACKLI"
      "ST\020\004\022\037\n\033JOIN_GROUP_RESULT_TAKEOUTED\020\005*M\n"
      "\010ChatType\022\024\n\020CHAT_TYPE_UNKNOW\020\000\022\024\n\020CHAT_"
      "TYPE_PUBLIC\020\001\022\025\n\021CHAT_TYPE_PRIVATE\020\002B-\n)"
      "org.tio.examples.im.common.packet"
      "sP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1931);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "main/resources/chat.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_main_2fresources_2fchat_2eproto

const ::google::protobuf::EnumDescriptor* DeviceType_descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_enum_descriptors[0];
}
bool DeviceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Command_descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_enum_descriptors[1];
}
bool Command_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* JoinGroupResult_descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_enum_descriptors[2];
}
bool JoinGroupResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ChatType_descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_enum_descriptors[3];
}
bool ChatType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthReqBody::kTimeFieldNumber;
const int AuthReqBody::kDeviceIdFieldNumber;
const int AuthReqBody::kTokenFieldNumber;
const int AuthReqBody::kDeviceTypeFieldNumber;
const int AuthReqBody::kCidFieldNumber;
const int AuthReqBody::kAppVersionFieldNumber;
const int AuthReqBody::kDeviceInfoFieldNumber;
const int AuthReqBody::kSeqFieldNumber;
const int AuthReqBody::kSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthReqBody::AuthReqBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.tio.examples.im.common.packets.AuthReqBody)
}
AuthReqBody::AuthReqBody(const AuthReqBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cid().size() > 0) {
    cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
  }
  appversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appversion().size() > 0) {
    appversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appversion_);
  }
  deviceinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceinfo().size() > 0) {
    deviceinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceinfo_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign().size() > 0) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  ::memcpy(&time_, &from.time_,
    reinterpret_cast<char*>(&devicetype_) -
    reinterpret_cast<char*>(&time_) + sizeof(devicetype_));
  // @@protoc_insertion_point(copy_constructor:org.tio.examples.im.common.packets.AuthReqBody)
}

void AuthReqBody::SharedCtor() {
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, reinterpret_cast<char*>(&devicetype_) -
    reinterpret_cast<char*>(&time_) + sizeof(devicetype_));
  _cached_size_ = 0;
}

AuthReqBody::~AuthReqBody() {
  // @@protoc_insertion_point(destructor:org.tio.examples.im.common.packets.AuthReqBody)
  SharedDtor();
}

void AuthReqBody::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthReqBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthReqBody::descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[0].descriptor;
}

const AuthReqBody& AuthReqBody::default_instance() {
  protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

AuthReqBody* AuthReqBody::New(::google::protobuf::Arena* arena) const {
  AuthReqBody* n = new AuthReqBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthReqBody::Clear() {
// @@protoc_insertion_point(message_clear_start:org.tio.examples.im.common.packets.AuthReqBody)
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, reinterpret_cast<char*>(&devicetype_) -
    reinterpret_cast<char*>(&time_) + sizeof(devicetype_));
}

bool AuthReqBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.tio.examples.im.common.packets.AuthReqBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deviceId = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceid().data(), this->deviceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.AuthReqBody.deviceId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.AuthReqBody.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .org.tio.examples.im.common.packets.DeviceType deviceType = 4;
      case 4: {
        if (tag == 32u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_devicetype(static_cast< ::com::talent::aio::examples::im::common::packets::DeviceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cid = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cid().data(), this->cid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.AuthReqBody.cid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appVersion = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appversion().data(), this->appversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.AuthReqBody.appVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deviceInfo = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceinfo().data(), this->deviceinfo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.AuthReqBody.deviceInfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 seq = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sign = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.AuthReqBody.sign"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.tio.examples.im.common.packets.AuthReqBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.tio.examples.im.common.packets.AuthReqBody)
  return false;
#undef DO_
}

void AuthReqBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.tio.examples.im.common.packets.AuthReqBody)
  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // string deviceId = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->deviceid(), output);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->token(), output);
  }

  // .org.tio.examples.im.common.packets.DeviceType deviceType = 4;
  if (this->devicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->devicetype(), output);
  }

  // string cid = 5;
  if (this->cid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cid().data(), this->cid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.cid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cid(), output);
  }

  // string appVersion = 6;
  if (this->appversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.appVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->appversion(), output);
  }

  // string deviceInfo = 7;
  if (this->deviceinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceinfo().data(), this->deviceinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.deviceInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->deviceinfo(), output);
  }

  // int64 seq = 8;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->seq(), output);
  }

  // string sign = 9;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sign(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.tio.examples.im.common.packets.AuthReqBody)
}

::google::protobuf::uint8* AuthReqBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:org.tio.examples.im.common.packets.AuthReqBody)
  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // string deviceId = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->deviceid(), target);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->token(), target);
  }

  // .org.tio.examples.im.common.packets.DeviceType deviceType = 4;
  if (this->devicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->devicetype(), target);
  }

  // string cid = 5;
  if (this->cid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cid().data(), this->cid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.cid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cid(), target);
  }

  // string appVersion = 6;
  if (this->appversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.appVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->appversion(), target);
  }

  // string deviceInfo = 7;
  if (this->deviceinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceinfo().data(), this->deviceinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.deviceInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->deviceinfo(), target);
  }

  // int64 seq = 8;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->seq(), target);
  }

  // string sign = 9;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.AuthReqBody.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->sign(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.tio.examples.im.common.packets.AuthReqBody)
  return target;
}

size_t AuthReqBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.tio.examples.im.common.packets.AuthReqBody)
  size_t total_size = 0;

  // string deviceId = 2;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  // string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string cid = 5;
  if (this->cid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cid());
  }

  // string appVersion = 6;
  if (this->appversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appversion());
  }

  // string deviceInfo = 7;
  if (this->deviceinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceinfo());
  }

  // string sign = 9;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign());
  }

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // int64 seq = 8;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seq());
  }

  // .org.tio.examples.im.common.packets.DeviceType deviceType = 4;
  if (this->devicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->devicetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthReqBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.tio.examples.im.common.packets.AuthReqBody)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthReqBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthReqBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.tio.examples.im.common.packets.AuthReqBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.tio.examples.im.common.packets.AuthReqBody)
    MergeFrom(*source);
  }
}

void AuthReqBody::MergeFrom(const AuthReqBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.tio.examples.im.common.packets.AuthReqBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.cid().size() > 0) {

    cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
  }
  if (from.appversion().size() > 0) {

    appversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appversion_);
  }
  if (from.deviceinfo().size() > 0) {

    deviceinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceinfo_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.devicetype() != 0) {
    set_devicetype(from.devicetype());
  }
}

void AuthReqBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.tio.examples.im.common.packets.AuthReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthReqBody::CopyFrom(const AuthReqBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.tio.examples.im.common.packets.AuthReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthReqBody::IsInitialized() const {
  return true;
}

void AuthReqBody::Swap(AuthReqBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthReqBody::InternalSwap(AuthReqBody* other) {
  deviceid_.Swap(&other->deviceid_);
  token_.Swap(&other->token_);
  cid_.Swap(&other->cid_);
  appversion_.Swap(&other->appversion_);
  deviceinfo_.Swap(&other->deviceinfo_);
  sign_.Swap(&other->sign_);
  std::swap(time_, other->time_);
  std::swap(seq_, other->seq_);
  std::swap(devicetype_, other->devicetype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthReqBody::GetMetadata() const {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthReqBody

// int64 time = 1;
void AuthReqBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AuthReqBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.time)
  return time_;
}
void AuthReqBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.time)
}

// string deviceId = 2;
void AuthReqBody::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthReqBody::deviceid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
  return deviceid_.GetNoArena();
}
void AuthReqBody::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
}
#if LANG_CXX11
void AuthReqBody::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
}
#endif
void AuthReqBody::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
}
void AuthReqBody::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
}
::std::string* AuthReqBody::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthReqBody::release_deviceid() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthReqBody::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.deviceId)
}

// string token = 3;
void AuthReqBody::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthReqBody::token() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.token)
  return token_.GetNoArena();
}
void AuthReqBody::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.token)
}
#if LANG_CXX11
void AuthReqBody::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.token)
}
#endif
void AuthReqBody::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.token)
}
void AuthReqBody::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.token)
}
::std::string* AuthReqBody::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthReqBody::release_token() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthReqBody::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.token)
}

// .org.tio.examples.im.common.packets.DeviceType deviceType = 4;
void AuthReqBody::clear_devicetype() {
  devicetype_ = 0;
}
::com::talent::aio::examples::im::common::packets::DeviceType AuthReqBody::devicetype() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.deviceType)
  return static_cast< ::com::talent::aio::examples::im::common::packets::DeviceType >(devicetype_);
}
void AuthReqBody::set_devicetype(::com::talent::aio::examples::im::common::packets::DeviceType value) {
  
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.deviceType)
}

// string cid = 5;
void AuthReqBody::clear_cid() {
  cid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthReqBody::cid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.cid)
  return cid_.GetNoArena();
}
void AuthReqBody::set_cid(const ::std::string& value) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.cid)
}
#if LANG_CXX11
void AuthReqBody::set_cid(::std::string&& value) {
  
  cid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.cid)
}
#endif
void AuthReqBody::set_cid(const char* value) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.cid)
}
void AuthReqBody::set_cid(const char* value, size_t size) {
  
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.cid)
}
::std::string* AuthReqBody::mutable_cid() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.cid)
  return cid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthReqBody::release_cid() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.cid)
  
  return cid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthReqBody::set_allocated_cid(::std::string* cid) {
  if (cid != NULL) {
    
  } else {
    
  }
  cid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cid);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.cid)
}

// string appVersion = 6;
void AuthReqBody::clear_appversion() {
  appversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthReqBody::appversion() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
  return appversion_.GetNoArena();
}
void AuthReqBody::set_appversion(const ::std::string& value) {
  
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
}
#if LANG_CXX11
void AuthReqBody::set_appversion(::std::string&& value) {
  
  appversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
}
#endif
void AuthReqBody::set_appversion(const char* value) {
  
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
}
void AuthReqBody::set_appversion(const char* value, size_t size) {
  
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
}
::std::string* AuthReqBody::mutable_appversion() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
  return appversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthReqBody::release_appversion() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
  
  return appversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthReqBody::set_allocated_appversion(::std::string* appversion) {
  if (appversion != NULL) {
    
  } else {
    
  }
  appversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appversion);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.appVersion)
}

// string deviceInfo = 7;
void AuthReqBody::clear_deviceinfo() {
  deviceinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthReqBody::deviceinfo() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
  return deviceinfo_.GetNoArena();
}
void AuthReqBody::set_deviceinfo(const ::std::string& value) {
  
  deviceinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
}
#if LANG_CXX11
void AuthReqBody::set_deviceinfo(::std::string&& value) {
  
  deviceinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
}
#endif
void AuthReqBody::set_deviceinfo(const char* value) {
  
  deviceinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
}
void AuthReqBody::set_deviceinfo(const char* value, size_t size) {
  
  deviceinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
}
::std::string* AuthReqBody::mutable_deviceinfo() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
  return deviceinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthReqBody::release_deviceinfo() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
  
  return deviceinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthReqBody::set_allocated_deviceinfo(::std::string* deviceinfo) {
  if (deviceinfo != NULL) {
    
  } else {
    
  }
  deviceinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceinfo);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.deviceInfo)
}

// int64 seq = 8;
void AuthReqBody::clear_seq() {
  seq_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AuthReqBody::seq() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.seq)
  return seq_;
}
void AuthReqBody::set_seq(::google::protobuf::int64 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.seq)
}

// string sign = 9;
void AuthReqBody::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthReqBody::sign() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthReqBody.sign)
  return sign_.GetNoArena();
}
void AuthReqBody::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthReqBody.sign)
}
#if LANG_CXX11
void AuthReqBody::set_sign(::std::string&& value) {
  
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.AuthReqBody.sign)
}
#endif
void AuthReqBody::set_sign(const char* value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.AuthReqBody.sign)
}
void AuthReqBody::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.AuthReqBody.sign)
}
::std::string* AuthReqBody::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.AuthReqBody.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthReqBody::release_sign() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.AuthReqBody.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthReqBody::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.AuthReqBody.sign)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRespBody::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRespBody::AuthRespBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.tio.examples.im.common.packets.AuthRespBody)
}
AuthRespBody::AuthRespBody(const AuthRespBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:org.tio.examples.im.common.packets.AuthRespBody)
}

void AuthRespBody::SharedCtor() {
  time_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

AuthRespBody::~AuthRespBody() {
  // @@protoc_insertion_point(destructor:org.tio.examples.im.common.packets.AuthRespBody)
  SharedDtor();
}

void AuthRespBody::SharedDtor() {
}

void AuthRespBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRespBody::descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[1].descriptor;
}

const AuthRespBody& AuthRespBody::default_instance() {
  protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

AuthRespBody* AuthRespBody::New(::google::protobuf::Arena* arena) const {
  AuthRespBody* n = new AuthRespBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRespBody::Clear() {
// @@protoc_insertion_point(message_clear_start:org.tio.examples.im.common.packets.AuthRespBody)
  time_ = GOOGLE_LONGLONG(0);
}

bool AuthRespBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.tio.examples.im.common.packets.AuthRespBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.tio.examples.im.common.packets.AuthRespBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.tio.examples.im.common.packets.AuthRespBody)
  return false;
#undef DO_
}

void AuthRespBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.tio.examples.im.common.packets.AuthRespBody)
  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.tio.examples.im.common.packets.AuthRespBody)
}

::google::protobuf::uint8* AuthRespBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:org.tio.examples.im.common.packets.AuthRespBody)
  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.tio.examples.im.common.packets.AuthRespBody)
  return target;
}

size_t AuthRespBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.tio.examples.im.common.packets.AuthRespBody)
  size_t total_size = 0;

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRespBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.tio.examples.im.common.packets.AuthRespBody)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRespBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRespBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.tio.examples.im.common.packets.AuthRespBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.tio.examples.im.common.packets.AuthRespBody)
    MergeFrom(*source);
  }
}

void AuthRespBody::MergeFrom(const AuthRespBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.tio.examples.im.common.packets.AuthRespBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void AuthRespBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.tio.examples.im.common.packets.AuthRespBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRespBody::CopyFrom(const AuthRespBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.tio.examples.im.common.packets.AuthRespBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRespBody::IsInitialized() const {
  return true;
}

void AuthRespBody::Swap(AuthRespBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRespBody::InternalSwap(AuthRespBody* other) {
  std::swap(time_, other->time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRespBody::GetMetadata() const {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthRespBody

// int64 time = 1;
void AuthRespBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AuthRespBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.AuthRespBody.time)
  return time_;
}
void AuthRespBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.AuthRespBody.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinReqBody::kTimeFieldNumber;
const int JoinReqBody::kGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinReqBody::JoinReqBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.tio.examples.im.common.packets.JoinReqBody)
}
JoinReqBody::JoinReqBody(const JoinReqBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group().size() > 0) {
    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:org.tio.examples.im.common.packets.JoinReqBody)
}

void JoinReqBody::SharedCtor() {
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

JoinReqBody::~JoinReqBody() {
  // @@protoc_insertion_point(destructor:org.tio.examples.im.common.packets.JoinReqBody)
  SharedDtor();
}

void JoinReqBody::SharedDtor() {
  group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JoinReqBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinReqBody::descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[2].descriptor;
}

const JoinReqBody& JoinReqBody::default_instance() {
  protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinReqBody* JoinReqBody::New(::google::protobuf::Arena* arena) const {
  JoinReqBody* n = new JoinReqBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinReqBody::Clear() {
// @@protoc_insertion_point(message_clear_start:org.tio.examples.im.common.packets.JoinReqBody)
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_LONGLONG(0);
}

bool JoinReqBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.tio.examples.im.common.packets.JoinReqBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.JoinReqBody.group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.tio.examples.im.common.packets.JoinReqBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.tio.examples.im.common.packets.JoinReqBody)
  return false;
#undef DO_
}

void JoinReqBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.tio.examples.im.common.packets.JoinReqBody)
  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // string group = 2;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.JoinReqBody.group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.tio.examples.im.common.packets.JoinReqBody)
}

::google::protobuf::uint8* JoinReqBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:org.tio.examples.im.common.packets.JoinReqBody)
  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // string group = 2;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.JoinReqBody.group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.tio.examples.im.common.packets.JoinReqBody)
  return target;
}

size_t JoinReqBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.tio.examples.im.common.packets.JoinReqBody)
  size_t total_size = 0;

  // string group = 2;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());
  }

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinReqBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.tio.examples.im.common.packets.JoinReqBody)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinReqBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinReqBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.tio.examples.im.common.packets.JoinReqBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.tio.examples.im.common.packets.JoinReqBody)
    MergeFrom(*source);
  }
}

void JoinReqBody::MergeFrom(const JoinReqBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.tio.examples.im.common.packets.JoinReqBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.group().size() > 0) {

    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void JoinReqBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.tio.examples.im.common.packets.JoinReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinReqBody::CopyFrom(const JoinReqBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.tio.examples.im.common.packets.JoinReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinReqBody::IsInitialized() const {
  return true;
}

void JoinReqBody::Swap(JoinReqBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinReqBody::InternalSwap(JoinReqBody* other) {
  group_.Swap(&other->group_);
  std::swap(time_, other->time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinReqBody::GetMetadata() const {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinReqBody

// int64 time = 1;
void JoinReqBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 JoinReqBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.JoinReqBody.time)
  return time_;
}
void JoinReqBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.JoinReqBody.time)
}

// string group = 2;
void JoinReqBody::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& JoinReqBody::group() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.JoinReqBody.group)
  return group_.GetNoArena();
}
void JoinReqBody::set_group(const ::std::string& value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.JoinReqBody.group)
}
#if LANG_CXX11
void JoinReqBody::set_group(::std::string&& value) {
  
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.JoinReqBody.group)
}
#endif
void JoinReqBody::set_group(const char* value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.JoinReqBody.group)
}
void JoinReqBody::set_group(const char* value, size_t size) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.JoinReqBody.group)
}
::std::string* JoinReqBody::mutable_group() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.JoinReqBody.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinReqBody::release_group() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.JoinReqBody.group)
  
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinReqBody::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    
  } else {
    
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.JoinReqBody.group)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinRespBody::kTimeFieldNumber;
const int JoinRespBody::kResultFieldNumber;
const int JoinRespBody::kGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinRespBody::JoinRespBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.tio.examples.im.common.packets.JoinRespBody)
}
JoinRespBody::JoinRespBody(const JoinRespBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group().size() > 0) {
    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  ::memcpy(&time_, &from.time_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&time_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:org.tio.examples.im.common.packets.JoinRespBody)
}

void JoinRespBody::SharedCtor() {
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&time_) + sizeof(result_));
  _cached_size_ = 0;
}

JoinRespBody::~JoinRespBody() {
  // @@protoc_insertion_point(destructor:org.tio.examples.im.common.packets.JoinRespBody)
  SharedDtor();
}

void JoinRespBody::SharedDtor() {
  group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JoinRespBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinRespBody::descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[3].descriptor;
}

const JoinRespBody& JoinRespBody::default_instance() {
  protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinRespBody* JoinRespBody::New(::google::protobuf::Arena* arena) const {
  JoinRespBody* n = new JoinRespBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinRespBody::Clear() {
// @@protoc_insertion_point(message_clear_start:org.tio.examples.im.common.packets.JoinRespBody)
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&time_) + sizeof(result_));
}

bool JoinRespBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.tio.examples.im.common.packets.JoinRespBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .org.tio.examples.im.common.packets.JoinGroupResult result = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::com::talent::aio::examples::im::common::packets::JoinGroupResult >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.JoinRespBody.group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.tio.examples.im.common.packets.JoinRespBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.tio.examples.im.common.packets.JoinRespBody)
  return false;
#undef DO_
}

void JoinRespBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.tio.examples.im.common.packets.JoinRespBody)
  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // .org.tio.examples.im.common.packets.JoinGroupResult result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // string group = 3;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.JoinRespBody.group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->group(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.tio.examples.im.common.packets.JoinRespBody)
}

::google::protobuf::uint8* JoinRespBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:org.tio.examples.im.common.packets.JoinRespBody)
  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // .org.tio.examples.im.common.packets.JoinGroupResult result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // string group = 3;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.JoinRespBody.group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->group(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.tio.examples.im.common.packets.JoinRespBody)
  return target;
}

size_t JoinRespBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.tio.examples.im.common.packets.JoinRespBody)
  size_t total_size = 0;

  // string group = 3;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());
  }

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // .org.tio.examples.im.common.packets.JoinGroupResult result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinRespBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.tio.examples.im.common.packets.JoinRespBody)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinRespBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinRespBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.tio.examples.im.common.packets.JoinRespBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.tio.examples.im.common.packets.JoinRespBody)
    MergeFrom(*source);
  }
}

void JoinRespBody::MergeFrom(const JoinRespBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.tio.examples.im.common.packets.JoinRespBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.group().size() > 0) {

    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void JoinRespBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.tio.examples.im.common.packets.JoinRespBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinRespBody::CopyFrom(const JoinRespBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.tio.examples.im.common.packets.JoinRespBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinRespBody::IsInitialized() const {
  return true;
}

void JoinRespBody::Swap(JoinRespBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinRespBody::InternalSwap(JoinRespBody* other) {
  group_.Swap(&other->group_);
  std::swap(time_, other->time_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinRespBody::GetMetadata() const {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinRespBody

// int64 time = 1;
void JoinRespBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 JoinRespBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.JoinRespBody.time)
  return time_;
}
void JoinRespBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.JoinRespBody.time)
}

// .org.tio.examples.im.common.packets.JoinGroupResult result = 2;
void JoinRespBody::clear_result() {
  result_ = 0;
}
::com::talent::aio::examples::im::common::packets::JoinGroupResult JoinRespBody::result() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.JoinRespBody.result)
  return static_cast< ::com::talent::aio::examples::im::common::packets::JoinGroupResult >(result_);
}
void JoinRespBody::set_result(::com::talent::aio::examples::im::common::packets::JoinGroupResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.JoinRespBody.result)
}

// string group = 3;
void JoinRespBody::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& JoinRespBody::group() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.JoinRespBody.group)
  return group_.GetNoArena();
}
void JoinRespBody::set_group(const ::std::string& value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.JoinRespBody.group)
}
#if LANG_CXX11
void JoinRespBody::set_group(::std::string&& value) {
  
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.JoinRespBody.group)
}
#endif
void JoinRespBody::set_group(const char* value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.JoinRespBody.group)
}
void JoinRespBody::set_group(const char* value, size_t size) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.JoinRespBody.group)
}
::std::string* JoinRespBody::mutable_group() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.JoinRespBody.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinRespBody::release_group() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.JoinRespBody.group)
  
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinRespBody::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    
  } else {
    
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.JoinRespBody.group)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatReqBody::kTimeFieldNumber;
const int ChatReqBody::kTypeFieldNumber;
const int ChatReqBody::kTextFieldNumber;
const int ChatReqBody::kGroupFieldNumber;
const int ChatReqBody::kToIdFieldNumber;
const int ChatReqBody::kToNickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatReqBody::ChatReqBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.tio.examples.im.common.packets.ChatReqBody)
}
ChatReqBody::ChatReqBody(const ChatReqBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group().size() > 0) {
    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  tonick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tonick().size() > 0) {
    tonick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tonick_);
  }
  ::memcpy(&time_, &from.time_,
    reinterpret_cast<char*>(&toid_) -
    reinterpret_cast<char*>(&time_) + sizeof(toid_));
  // @@protoc_insertion_point(copy_constructor:org.tio.examples.im.common.packets.ChatReqBody)
}

void ChatReqBody::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tonick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, reinterpret_cast<char*>(&toid_) -
    reinterpret_cast<char*>(&time_) + sizeof(toid_));
  _cached_size_ = 0;
}

ChatReqBody::~ChatReqBody() {
  // @@protoc_insertion_point(destructor:org.tio.examples.im.common.packets.ChatReqBody)
  SharedDtor();
}

void ChatReqBody::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tonick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatReqBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatReqBody::descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[4].descriptor;
}

const ChatReqBody& ChatReqBody::default_instance() {
  protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatReqBody* ChatReqBody::New(::google::protobuf::Arena* arena) const {
  ChatReqBody* n = new ChatReqBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatReqBody::Clear() {
// @@protoc_insertion_point(message_clear_start:org.tio.examples.im.common.packets.ChatReqBody)
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tonick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, reinterpret_cast<char*>(&toid_) -
    reinterpret_cast<char*>(&time_) + sizeof(toid_));
}

bool ChatReqBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.tio.examples.im.common.packets.ChatReqBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .org.tio.examples.im.common.packets.ChatType type = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::com::talent::aio::examples::im::common::packets::ChatType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.ChatReqBody.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.ChatReqBody.group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 toId = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string toNick = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tonick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tonick().data(), this->tonick().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.ChatReqBody.toNick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.tio.examples.im.common.packets.ChatReqBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.tio.examples.im.common.packets.ChatReqBody)
  return false;
#undef DO_
}

void ChatReqBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.tio.examples.im.common.packets.ChatReqBody)
  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // .org.tio.examples.im.common.packets.ChatType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatReqBody.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  // string group = 4;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatReqBody.group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->group(), output);
  }

  // int32 toId = 5;
  if (this->toid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->toid(), output);
  }

  // string toNick = 6;
  if (this->tonick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tonick().data(), this->tonick().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatReqBody.toNick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->tonick(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.tio.examples.im.common.packets.ChatReqBody)
}

::google::protobuf::uint8* ChatReqBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:org.tio.examples.im.common.packets.ChatReqBody)
  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // .org.tio.examples.im.common.packets.ChatType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatReqBody.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // string group = 4;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatReqBody.group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->group(), target);
  }

  // int32 toId = 5;
  if (this->toid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->toid(), target);
  }

  // string toNick = 6;
  if (this->tonick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tonick().data(), this->tonick().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatReqBody.toNick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->tonick(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.tio.examples.im.common.packets.ChatReqBody)
  return target;
}

size_t ChatReqBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.tio.examples.im.common.packets.ChatReqBody)
  size_t total_size = 0;

  // string text = 3;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string group = 4;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());
  }

  // string toNick = 6;
  if (this->tonick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tonick());
  }

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // .org.tio.examples.im.common.packets.ChatType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 toId = 5;
  if (this->toid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->toid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatReqBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.tio.examples.im.common.packets.ChatReqBody)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatReqBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatReqBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.tio.examples.im.common.packets.ChatReqBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.tio.examples.im.common.packets.ChatReqBody)
    MergeFrom(*source);
  }
}

void ChatReqBody::MergeFrom(const ChatReqBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.tio.examples.im.common.packets.ChatReqBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.group().size() > 0) {

    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  if (from.tonick().size() > 0) {

    tonick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tonick_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.toid() != 0) {
    set_toid(from.toid());
  }
}

void ChatReqBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.tio.examples.im.common.packets.ChatReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatReqBody::CopyFrom(const ChatReqBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.tio.examples.im.common.packets.ChatReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatReqBody::IsInitialized() const {
  return true;
}

void ChatReqBody::Swap(ChatReqBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatReqBody::InternalSwap(ChatReqBody* other) {
  text_.Swap(&other->text_);
  group_.Swap(&other->group_);
  tonick_.Swap(&other->tonick_);
  std::swap(time_, other->time_);
  std::swap(type_, other->type_);
  std::swap(toid_, other->toid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatReqBody::GetMetadata() const {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatReqBody

// int64 time = 1;
void ChatReqBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ChatReqBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.time)
  return time_;
}
void ChatReqBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.time)
}

// .org.tio.examples.im.common.packets.ChatType type = 2;
void ChatReqBody::clear_type() {
  type_ = 0;
}
::com::talent::aio::examples::im::common::packets::ChatType ChatReqBody::type() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.type)
  return static_cast< ::com::talent::aio::examples::im::common::packets::ChatType >(type_);
}
void ChatReqBody::set_type(::com::talent::aio::examples::im::common::packets::ChatType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.type)
}

// string text = 3;
void ChatReqBody::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatReqBody::text() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.text)
  return text_.GetNoArena();
}
void ChatReqBody::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.text)
}
#if LANG_CXX11
void ChatReqBody::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatReqBody.text)
}
#endif
void ChatReqBody::set_text(const char* value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatReqBody.text)
}
void ChatReqBody::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatReqBody.text)
}
::std::string* ChatReqBody::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatReqBody.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatReqBody::release_text() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatReqBody.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatReqBody::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatReqBody.text)
}

// string group = 4;
void ChatReqBody::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatReqBody::group() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.group)
  return group_.GetNoArena();
}
void ChatReqBody::set_group(const ::std::string& value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.group)
}
#if LANG_CXX11
void ChatReqBody::set_group(::std::string&& value) {
  
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatReqBody.group)
}
#endif
void ChatReqBody::set_group(const char* value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatReqBody.group)
}
void ChatReqBody::set_group(const char* value, size_t size) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatReqBody.group)
}
::std::string* ChatReqBody::mutable_group() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatReqBody.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatReqBody::release_group() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatReqBody.group)
  
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatReqBody::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    
  } else {
    
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatReqBody.group)
}

// int32 toId = 5;
void ChatReqBody::clear_toid() {
  toid_ = 0;
}
::google::protobuf::int32 ChatReqBody::toid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.toId)
  return toid_;
}
void ChatReqBody::set_toid(::google::protobuf::int32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.toId)
}

// string toNick = 6;
void ChatReqBody::clear_tonick() {
  tonick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatReqBody::tonick() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatReqBody.toNick)
  return tonick_.GetNoArena();
}
void ChatReqBody::set_tonick(const ::std::string& value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatReqBody.toNick)
}
#if LANG_CXX11
void ChatReqBody::set_tonick(::std::string&& value) {
  
  tonick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatReqBody.toNick)
}
#endif
void ChatReqBody::set_tonick(const char* value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatReqBody.toNick)
}
void ChatReqBody::set_tonick(const char* value, size_t size) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatReqBody.toNick)
}
::std::string* ChatReqBody::mutable_tonick() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatReqBody.toNick)
  return tonick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatReqBody::release_tonick() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatReqBody.toNick)
  
  return tonick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatReqBody::set_allocated_tonick(::std::string* tonick) {
  if (tonick != NULL) {
    
  } else {
    
  }
  tonick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tonick);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatReqBody.toNick)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatRespBody::kTimeFieldNumber;
const int ChatRespBody::kTypeFieldNumber;
const int ChatRespBody::kTextFieldNumber;
const int ChatRespBody::kFromIdFieldNumber;
const int ChatRespBody::kFromNickFieldNumber;
const int ChatRespBody::kToIdFieldNumber;
const int ChatRespBody::kToNickFieldNumber;
const int ChatRespBody::kGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatRespBody::ChatRespBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.tio.examples.im.common.packets.ChatRespBody)
}
ChatRespBody::ChatRespBody(const ChatRespBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  fromnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fromnick().size() > 0) {
    fromnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromnick_);
  }
  tonick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tonick().size() > 0) {
    tonick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tonick_);
  }
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group().size() > 0) {
    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  ::memcpy(&time_, &from.time_,
    reinterpret_cast<char*>(&toid_) -
    reinterpret_cast<char*>(&time_) + sizeof(toid_));
  // @@protoc_insertion_point(copy_constructor:org.tio.examples.im.common.packets.ChatRespBody)
}

void ChatRespBody::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tonick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, reinterpret_cast<char*>(&toid_) -
    reinterpret_cast<char*>(&time_) + sizeof(toid_));
  _cached_size_ = 0;
}

ChatRespBody::~ChatRespBody() {
  // @@protoc_insertion_point(destructor:org.tio.examples.im.common.packets.ChatRespBody)
  SharedDtor();
}

void ChatRespBody::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromnick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tonick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatRespBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatRespBody::descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[5].descriptor;
}

const ChatRespBody& ChatRespBody::default_instance() {
  protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatRespBody* ChatRespBody::New(::google::protobuf::Arena* arena) const {
  ChatRespBody* n = new ChatRespBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatRespBody::Clear() {
// @@protoc_insertion_point(message_clear_start:org.tio.examples.im.common.packets.ChatRespBody)
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromnick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tonick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, reinterpret_cast<char*>(&toid_) -
    reinterpret_cast<char*>(&time_) + sizeof(toid_));
}

bool ChatRespBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.tio.examples.im.common.packets.ChatRespBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .org.tio.examples.im.common.packets.ChatType type = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::com::talent::aio::examples::im::common::packets::ChatType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.ChatRespBody.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fromId = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fromid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fromNick = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromnick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fromnick().data(), this->fromnick().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.ChatRespBody.fromNick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 toId = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string toNick = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tonick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tonick().data(), this->tonick().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.ChatRespBody.toNick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.ChatRespBody.group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.tio.examples.im.common.packets.ChatRespBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.tio.examples.im.common.packets.ChatRespBody)
  return false;
#undef DO_
}

void ChatRespBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.tio.examples.im.common.packets.ChatRespBody)
  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // .org.tio.examples.im.common.packets.ChatType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatRespBody.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  // int32 fromId = 4;
  if (this->fromid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->fromid(), output);
  }

  // string fromNick = 5;
  if (this->fromnick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fromnick().data(), this->fromnick().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatRespBody.fromNick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->fromnick(), output);
  }

  // int32 toId = 6;
  if (this->toid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->toid(), output);
  }

  // string toNick = 7;
  if (this->tonick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tonick().data(), this->tonick().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatRespBody.toNick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->tonick(), output);
  }

  // string group = 8;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatRespBody.group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->group(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.tio.examples.im.common.packets.ChatRespBody)
}

::google::protobuf::uint8* ChatRespBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:org.tio.examples.im.common.packets.ChatRespBody)
  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // .org.tio.examples.im.common.packets.ChatType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatRespBody.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // int32 fromId = 4;
  if (this->fromid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->fromid(), target);
  }

  // string fromNick = 5;
  if (this->fromnick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fromnick().data(), this->fromnick().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatRespBody.fromNick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->fromnick(), target);
  }

  // int32 toId = 6;
  if (this->toid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->toid(), target);
  }

  // string toNick = 7;
  if (this->tonick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tonick().data(), this->tonick().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatRespBody.toNick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->tonick(), target);
  }

  // string group = 8;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.ChatRespBody.group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->group(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.tio.examples.im.common.packets.ChatRespBody)
  return target;
}

size_t ChatRespBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.tio.examples.im.common.packets.ChatRespBody)
  size_t total_size = 0;

  // string text = 3;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string fromNick = 5;
  if (this->fromnick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fromnick());
  }

  // string toNick = 7;
  if (this->tonick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tonick());
  }

  // string group = 8;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());
  }

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // .org.tio.examples.im.common.packets.ChatType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 fromId = 4;
  if (this->fromid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fromid());
  }

  // int32 toId = 6;
  if (this->toid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->toid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatRespBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.tio.examples.im.common.packets.ChatRespBody)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatRespBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatRespBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.tio.examples.im.common.packets.ChatRespBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.tio.examples.im.common.packets.ChatRespBody)
    MergeFrom(*source);
  }
}

void ChatRespBody::MergeFrom(const ChatRespBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.tio.examples.im.common.packets.ChatRespBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.fromnick().size() > 0) {

    fromnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromnick_);
  }
  if (from.tonick().size() > 0) {

    tonick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tonick_);
  }
  if (from.group().size() > 0) {

    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.fromid() != 0) {
    set_fromid(from.fromid());
  }
  if (from.toid() != 0) {
    set_toid(from.toid());
  }
}

void ChatRespBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.tio.examples.im.common.packets.ChatRespBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatRespBody::CopyFrom(const ChatRespBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.tio.examples.im.common.packets.ChatRespBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatRespBody::IsInitialized() const {
  return true;
}

void ChatRespBody::Swap(ChatRespBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatRespBody::InternalSwap(ChatRespBody* other) {
  text_.Swap(&other->text_);
  fromnick_.Swap(&other->fromnick_);
  tonick_.Swap(&other->tonick_);
  group_.Swap(&other->group_);
  std::swap(time_, other->time_);
  std::swap(type_, other->type_);
  std::swap(fromid_, other->fromid_);
  std::swap(toid_, other->toid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatRespBody::GetMetadata() const {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatRespBody

// int64 time = 1;
void ChatRespBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ChatRespBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.time)
  return time_;
}
void ChatRespBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.time)
}

// .org.tio.examples.im.common.packets.ChatType type = 2;
void ChatRespBody::clear_type() {
  type_ = 0;
}
::com::talent::aio::examples::im::common::packets::ChatType ChatRespBody::type() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.type)
  return static_cast< ::com::talent::aio::examples::im::common::packets::ChatType >(type_);
}
void ChatRespBody::set_type(::com::talent::aio::examples::im::common::packets::ChatType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.type)
}

// string text = 3;
void ChatRespBody::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatRespBody::text() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.text)
  return text_.GetNoArena();
}
void ChatRespBody::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.text)
}
#if LANG_CXX11
void ChatRespBody::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatRespBody.text)
}
#endif
void ChatRespBody::set_text(const char* value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatRespBody.text)
}
void ChatRespBody::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatRespBody.text)
}
::std::string* ChatRespBody::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatRespBody.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatRespBody::release_text() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatRespBody.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatRespBody::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatRespBody.text)
}

// int32 fromId = 4;
void ChatRespBody::clear_fromid() {
  fromid_ = 0;
}
::google::protobuf::int32 ChatRespBody::fromid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.fromId)
  return fromid_;
}
void ChatRespBody::set_fromid(::google::protobuf::int32 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.fromId)
}

// string fromNick = 5;
void ChatRespBody::clear_fromnick() {
  fromnick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatRespBody::fromnick() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
  return fromnick_.GetNoArena();
}
void ChatRespBody::set_fromnick(const ::std::string& value) {
  
  fromnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
}
#if LANG_CXX11
void ChatRespBody::set_fromnick(::std::string&& value) {
  
  fromnick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
}
#endif
void ChatRespBody::set_fromnick(const char* value) {
  
  fromnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
}
void ChatRespBody::set_fromnick(const char* value, size_t size) {
  
  fromnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
}
::std::string* ChatRespBody::mutable_fromnick() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
  return fromnick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatRespBody::release_fromnick() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
  
  return fromnick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatRespBody::set_allocated_fromnick(::std::string* fromnick) {
  if (fromnick != NULL) {
    
  } else {
    
  }
  fromnick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromnick);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatRespBody.fromNick)
}

// int32 toId = 6;
void ChatRespBody::clear_toid() {
  toid_ = 0;
}
::google::protobuf::int32 ChatRespBody::toid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.toId)
  return toid_;
}
void ChatRespBody::set_toid(::google::protobuf::int32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.toId)
}

// string toNick = 7;
void ChatRespBody::clear_tonick() {
  tonick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatRespBody::tonick() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.toNick)
  return tonick_.GetNoArena();
}
void ChatRespBody::set_tonick(const ::std::string& value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.toNick)
}
#if LANG_CXX11
void ChatRespBody::set_tonick(::std::string&& value) {
  
  tonick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatRespBody.toNick)
}
#endif
void ChatRespBody::set_tonick(const char* value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatRespBody.toNick)
}
void ChatRespBody::set_tonick(const char* value, size_t size) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatRespBody.toNick)
}
::std::string* ChatRespBody::mutable_tonick() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatRespBody.toNick)
  return tonick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatRespBody::release_tonick() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatRespBody.toNick)
  
  return tonick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatRespBody::set_allocated_tonick(::std::string* tonick) {
  if (tonick != NULL) {
    
  } else {
    
  }
  tonick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tonick);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatRespBody.toNick)
}

// string group = 8;
void ChatRespBody::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatRespBody::group() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.ChatRespBody.group)
  return group_.GetNoArena();
}
void ChatRespBody::set_group(const ::std::string& value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.ChatRespBody.group)
}
#if LANG_CXX11
void ChatRespBody::set_group(::std::string&& value) {
  
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.ChatRespBody.group)
}
#endif
void ChatRespBody::set_group(const char* value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.ChatRespBody.group)
}
void ChatRespBody::set_group(const char* value, size_t size) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.ChatRespBody.group)
}
::std::string* ChatRespBody::mutable_group() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.ChatRespBody.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatRespBody::release_group() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.ChatRespBody.group)
  
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatRespBody::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    
  } else {
    
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.ChatRespBody.group)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeginToLiveReqBody::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeginToLiveReqBody::BeginToLiveReqBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.tio.examples.im.common.packets.BeginToLiveReqBody)
}
BeginToLiveReqBody::BeginToLiveReqBody(const BeginToLiveReqBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:org.tio.examples.im.common.packets.BeginToLiveReqBody)
}

void BeginToLiveReqBody::SharedCtor() {
  time_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

BeginToLiveReqBody::~BeginToLiveReqBody() {
  // @@protoc_insertion_point(destructor:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  SharedDtor();
}

void BeginToLiveReqBody::SharedDtor() {
}

void BeginToLiveReqBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeginToLiveReqBody::descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[6].descriptor;
}

const BeginToLiveReqBody& BeginToLiveReqBody::default_instance() {
  protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

BeginToLiveReqBody* BeginToLiveReqBody::New(::google::protobuf::Arena* arena) const {
  BeginToLiveReqBody* n = new BeginToLiveReqBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BeginToLiveReqBody::Clear() {
// @@protoc_insertion_point(message_clear_start:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  time_ = GOOGLE_LONGLONG(0);
}

bool BeginToLiveReqBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  return false;
#undef DO_
}

void BeginToLiveReqBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.tio.examples.im.common.packets.BeginToLiveReqBody)
}

::google::protobuf::uint8* BeginToLiveReqBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  return target;
}

size_t BeginToLiveReqBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  size_t total_size = 0;

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeginToLiveReqBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  GOOGLE_DCHECK_NE(&from, this);
  const BeginToLiveReqBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeginToLiveReqBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.tio.examples.im.common.packets.BeginToLiveReqBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.tio.examples.im.common.packets.BeginToLiveReqBody)
    MergeFrom(*source);
  }
}

void BeginToLiveReqBody::MergeFrom(const BeginToLiveReqBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void BeginToLiveReqBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeginToLiveReqBody::CopyFrom(const BeginToLiveReqBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.tio.examples.im.common.packets.BeginToLiveReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeginToLiveReqBody::IsInitialized() const {
  return true;
}

void BeginToLiveReqBody::Swap(BeginToLiveReqBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeginToLiveReqBody::InternalSwap(BeginToLiveReqBody* other) {
  std::swap(time_, other->time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BeginToLiveReqBody::GetMetadata() const {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BeginToLiveReqBody

// int64 time = 1;
void BeginToLiveReqBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BeginToLiveReqBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.BeginToLiveReqBody.time)
  return time_;
}
void BeginToLiveReqBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.BeginToLiveReqBody.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeginToLiveRespBody::kTimeFieldNumber;
const int BeginToLiveRespBody::kLiveidFieldNumber;
const int BeginToLiveRespBody::kRtmppublishurlFieldNumber;
const int BeginToLiveRespBody::kRtmpliveurlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeginToLiveRespBody::BeginToLiveRespBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.tio.examples.im.common.packets.BeginToLiveRespBody)
}
BeginToLiveRespBody::BeginToLiveRespBody(const BeginToLiveRespBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rtmppublishurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rtmppublishurl().size() > 0) {
    rtmppublishurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rtmppublishurl_);
  }
  rtmpliveurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rtmpliveurl().size() > 0) {
    rtmpliveurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rtmpliveurl_);
  }
  ::memcpy(&time_, &from.time_,
    reinterpret_cast<char*>(&liveid_) -
    reinterpret_cast<char*>(&time_) + sizeof(liveid_));
  // @@protoc_insertion_point(copy_constructor:org.tio.examples.im.common.packets.BeginToLiveRespBody)
}

void BeginToLiveRespBody::SharedCtor() {
  rtmppublishurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rtmpliveurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, reinterpret_cast<char*>(&liveid_) -
    reinterpret_cast<char*>(&time_) + sizeof(liveid_));
  _cached_size_ = 0;
}

BeginToLiveRespBody::~BeginToLiveRespBody() {
  // @@protoc_insertion_point(destructor:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  SharedDtor();
}

void BeginToLiveRespBody::SharedDtor() {
  rtmppublishurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rtmpliveurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BeginToLiveRespBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeginToLiveRespBody::descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[7].descriptor;
}

const BeginToLiveRespBody& BeginToLiveRespBody::default_instance() {
  protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

BeginToLiveRespBody* BeginToLiveRespBody::New(::google::protobuf::Arena* arena) const {
  BeginToLiveRespBody* n = new BeginToLiveRespBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BeginToLiveRespBody::Clear() {
// @@protoc_insertion_point(message_clear_start:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  rtmppublishurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rtmpliveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, reinterpret_cast<char*>(&liveid_) -
    reinterpret_cast<char*>(&time_) + sizeof(liveid_));
}

bool BeginToLiveRespBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 liveid = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &liveid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rtmppublishurl = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rtmppublishurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rtmppublishurl().data(), this->rtmppublishurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rtmpliveurl = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rtmpliveurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rtmpliveurl().data(), this->rtmpliveurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  return false;
#undef DO_
}

void BeginToLiveRespBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // int64 liveid = 2;
  if (this->liveid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->liveid(), output);
  }

  // string rtmppublishurl = 3;
  if (this->rtmppublishurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rtmppublishurl().data(), this->rtmppublishurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rtmppublishurl(), output);
  }

  // string rtmpliveurl = 4;
  if (this->rtmpliveurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rtmpliveurl().data(), this->rtmpliveurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->rtmpliveurl(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.tio.examples.im.common.packets.BeginToLiveRespBody)
}

::google::protobuf::uint8* BeginToLiveRespBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // int64 liveid = 2;
  if (this->liveid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->liveid(), target);
  }

  // string rtmppublishurl = 3;
  if (this->rtmppublishurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rtmppublishurl().data(), this->rtmppublishurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rtmppublishurl(), target);
  }

  // string rtmpliveurl = 4;
  if (this->rtmpliveurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rtmpliveurl().data(), this->rtmpliveurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->rtmpliveurl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  return target;
}

size_t BeginToLiveRespBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  size_t total_size = 0;

  // string rtmppublishurl = 3;
  if (this->rtmppublishurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rtmppublishurl());
  }

  // string rtmpliveurl = 4;
  if (this->rtmpliveurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rtmpliveurl());
  }

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // int64 liveid = 2;
  if (this->liveid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->liveid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeginToLiveRespBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  GOOGLE_DCHECK_NE(&from, this);
  const BeginToLiveRespBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeginToLiveRespBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.tio.examples.im.common.packets.BeginToLiveRespBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.tio.examples.im.common.packets.BeginToLiveRespBody)
    MergeFrom(*source);
  }
}

void BeginToLiveRespBody::MergeFrom(const BeginToLiveRespBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.rtmppublishurl().size() > 0) {

    rtmppublishurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rtmppublishurl_);
  }
  if (from.rtmpliveurl().size() > 0) {

    rtmpliveurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rtmpliveurl_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.liveid() != 0) {
    set_liveid(from.liveid());
  }
}

void BeginToLiveRespBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeginToLiveRespBody::CopyFrom(const BeginToLiveRespBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.tio.examples.im.common.packets.BeginToLiveRespBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeginToLiveRespBody::IsInitialized() const {
  return true;
}

void BeginToLiveRespBody::Swap(BeginToLiveRespBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeginToLiveRespBody::InternalSwap(BeginToLiveRespBody* other) {
  rtmppublishurl_.Swap(&other->rtmppublishurl_);
  rtmpliveurl_.Swap(&other->rtmpliveurl_);
  std::swap(time_, other->time_);
  std::swap(liveid_, other->liveid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BeginToLiveRespBody::GetMetadata() const {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BeginToLiveRespBody

// int64 time = 1;
void BeginToLiveRespBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BeginToLiveRespBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.BeginToLiveRespBody.time)
  return time_;
}
void BeginToLiveRespBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.BeginToLiveRespBody.time)
}

// int64 liveid = 2;
void BeginToLiveRespBody::clear_liveid() {
  liveid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BeginToLiveRespBody::liveid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.BeginToLiveRespBody.liveid)
  return liveid_;
}
void BeginToLiveRespBody::set_liveid(::google::protobuf::int64 value) {
  
  liveid_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.BeginToLiveRespBody.liveid)
}

// string rtmppublishurl = 3;
void BeginToLiveRespBody::clear_rtmppublishurl() {
  rtmppublishurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BeginToLiveRespBody::rtmppublishurl() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
  return rtmppublishurl_.GetNoArena();
}
void BeginToLiveRespBody::set_rtmppublishurl(const ::std::string& value) {
  
  rtmppublishurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
}
#if LANG_CXX11
void BeginToLiveRespBody::set_rtmppublishurl(::std::string&& value) {
  
  rtmppublishurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
}
#endif
void BeginToLiveRespBody::set_rtmppublishurl(const char* value) {
  
  rtmppublishurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
}
void BeginToLiveRespBody::set_rtmppublishurl(const char* value, size_t size) {
  
  rtmppublishurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
}
::std::string* BeginToLiveRespBody::mutable_rtmppublishurl() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
  return rtmppublishurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BeginToLiveRespBody::release_rtmppublishurl() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
  
  return rtmppublishurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BeginToLiveRespBody::set_allocated_rtmppublishurl(::std::string* rtmppublishurl) {
  if (rtmppublishurl != NULL) {
    
  } else {
    
  }
  rtmppublishurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rtmppublishurl);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmppublishurl)
}

// string rtmpliveurl = 4;
void BeginToLiveRespBody::clear_rtmpliveurl() {
  rtmpliveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BeginToLiveRespBody::rtmpliveurl() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
  return rtmpliveurl_.GetNoArena();
}
void BeginToLiveRespBody::set_rtmpliveurl(const ::std::string& value) {
  
  rtmpliveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
}
#if LANG_CXX11
void BeginToLiveRespBody::set_rtmpliveurl(::std::string&& value) {
  
  rtmpliveurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
}
#endif
void BeginToLiveRespBody::set_rtmpliveurl(const char* value) {
  
  rtmpliveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
}
void BeginToLiveRespBody::set_rtmpliveurl(const char* value, size_t size) {
  
  rtmpliveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
}
::std::string* BeginToLiveRespBody::mutable_rtmpliveurl() {
  
  // @@protoc_insertion_point(field_mutable:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
  return rtmpliveurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BeginToLiveRespBody::release_rtmpliveurl() {
  // @@protoc_insertion_point(field_release:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
  
  return rtmpliveurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BeginToLiveRespBody::set_allocated_rtmpliveurl(::std::string* rtmpliveurl) {
  if (rtmpliveurl != NULL) {
    
  } else {
    
  }
  rtmpliveurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rtmpliveurl);
  // @@protoc_insertion_point(field_set_allocated:org.tio.examples.im.common.packets.BeginToLiveRespBody.rtmpliveurl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndLiveReqBody::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndLiveReqBody::EndLiveReqBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.tio.examples.im.common.packets.EndLiveReqBody)
}
EndLiveReqBody::EndLiveReqBody(const EndLiveReqBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:org.tio.examples.im.common.packets.EndLiveReqBody)
}

void EndLiveReqBody::SharedCtor() {
  time_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

EndLiveReqBody::~EndLiveReqBody() {
  // @@protoc_insertion_point(destructor:org.tio.examples.im.common.packets.EndLiveReqBody)
  SharedDtor();
}

void EndLiveReqBody::SharedDtor() {
}

void EndLiveReqBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndLiveReqBody::descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[8].descriptor;
}

const EndLiveReqBody& EndLiveReqBody::default_instance() {
  protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

EndLiveReqBody* EndLiveReqBody::New(::google::protobuf::Arena* arena) const {
  EndLiveReqBody* n = new EndLiveReqBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndLiveReqBody::Clear() {
// @@protoc_insertion_point(message_clear_start:org.tio.examples.im.common.packets.EndLiveReqBody)
  time_ = GOOGLE_LONGLONG(0);
}

bool EndLiveReqBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.tio.examples.im.common.packets.EndLiveReqBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.tio.examples.im.common.packets.EndLiveReqBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.tio.examples.im.common.packets.EndLiveReqBody)
  return false;
#undef DO_
}

void EndLiveReqBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.tio.examples.im.common.packets.EndLiveReqBody)
  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.tio.examples.im.common.packets.EndLiveReqBody)
}

::google::protobuf::uint8* EndLiveReqBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:org.tio.examples.im.common.packets.EndLiveReqBody)
  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.tio.examples.im.common.packets.EndLiveReqBody)
  return target;
}

size_t EndLiveReqBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.tio.examples.im.common.packets.EndLiveReqBody)
  size_t total_size = 0;

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndLiveReqBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.tio.examples.im.common.packets.EndLiveReqBody)
  GOOGLE_DCHECK_NE(&from, this);
  const EndLiveReqBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndLiveReqBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.tio.examples.im.common.packets.EndLiveReqBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.tio.examples.im.common.packets.EndLiveReqBody)
    MergeFrom(*source);
  }
}

void EndLiveReqBody::MergeFrom(const EndLiveReqBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.tio.examples.im.common.packets.EndLiveReqBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void EndLiveReqBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.tio.examples.im.common.packets.EndLiveReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndLiveReqBody::CopyFrom(const EndLiveReqBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.tio.examples.im.common.packets.EndLiveReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndLiveReqBody::IsInitialized() const {
  return true;
}

void EndLiveReqBody::Swap(EndLiveReqBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndLiveReqBody::InternalSwap(EndLiveReqBody* other) {
  std::swap(time_, other->time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndLiveReqBody::GetMetadata() const {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EndLiveReqBody

// int64 time = 1;
void EndLiveReqBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 EndLiveReqBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.EndLiveReqBody.time)
  return time_;
}
void EndLiveReqBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.EndLiveReqBody.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndLiveRespBody::kTimeFieldNumber;
const int EndLiveRespBody::kLiveidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndLiveRespBody::EndLiveRespBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.tio.examples.im.common.packets.EndLiveRespBody)
}
EndLiveRespBody::EndLiveRespBody(const EndLiveRespBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    reinterpret_cast<char*>(&liveid_) -
    reinterpret_cast<char*>(&time_) + sizeof(liveid_));
  // @@protoc_insertion_point(copy_constructor:org.tio.examples.im.common.packets.EndLiveRespBody)
}

void EndLiveRespBody::SharedCtor() {
  ::memset(&time_, 0, reinterpret_cast<char*>(&liveid_) -
    reinterpret_cast<char*>(&time_) + sizeof(liveid_));
  _cached_size_ = 0;
}

EndLiveRespBody::~EndLiveRespBody() {
  // @@protoc_insertion_point(destructor:org.tio.examples.im.common.packets.EndLiveRespBody)
  SharedDtor();
}

void EndLiveRespBody::SharedDtor() {
}

void EndLiveRespBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndLiveRespBody::descriptor() {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[9].descriptor;
}

const EndLiveRespBody& EndLiveRespBody::default_instance() {
  protobuf_main_2fresources_2fchat_2eproto::InitDefaults();
  return *internal_default_instance();
}

EndLiveRespBody* EndLiveRespBody::New(::google::protobuf::Arena* arena) const {
  EndLiveRespBody* n = new EndLiveRespBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndLiveRespBody::Clear() {
// @@protoc_insertion_point(message_clear_start:org.tio.examples.im.common.packets.EndLiveRespBody)
  ::memset(&time_, 0, reinterpret_cast<char*>(&liveid_) -
    reinterpret_cast<char*>(&time_) + sizeof(liveid_));
}

bool EndLiveRespBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.tio.examples.im.common.packets.EndLiveRespBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 liveid = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &liveid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.tio.examples.im.common.packets.EndLiveRespBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.tio.examples.im.common.packets.EndLiveRespBody)
  return false;
#undef DO_
}

void EndLiveRespBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.tio.examples.im.common.packets.EndLiveRespBody)
  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // int64 liveid = 2;
  if (this->liveid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->liveid(), output);
  }

  // @@protoc_insertion_point(serialize_end:org.tio.examples.im.common.packets.EndLiveRespBody)
}

::google::protobuf::uint8* EndLiveRespBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:org.tio.examples.im.common.packets.EndLiveRespBody)
  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // int64 liveid = 2;
  if (this->liveid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->liveid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:org.tio.examples.im.common.packets.EndLiveRespBody)
  return target;
}

size_t EndLiveRespBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.tio.examples.im.common.packets.EndLiveRespBody)
  size_t total_size = 0;

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // int64 liveid = 2;
  if (this->liveid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->liveid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndLiveRespBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.tio.examples.im.common.packets.EndLiveRespBody)
  GOOGLE_DCHECK_NE(&from, this);
  const EndLiveRespBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndLiveRespBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.tio.examples.im.common.packets.EndLiveRespBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.tio.examples.im.common.packets.EndLiveRespBody)
    MergeFrom(*source);
  }
}

void EndLiveRespBody::MergeFrom(const EndLiveRespBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.tio.examples.im.common.packets.EndLiveRespBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.liveid() != 0) {
    set_liveid(from.liveid());
  }
}

void EndLiveRespBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.tio.examples.im.common.packets.EndLiveRespBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndLiveRespBody::CopyFrom(const EndLiveRespBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.tio.examples.im.common.packets.EndLiveRespBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndLiveRespBody::IsInitialized() const {
  return true;
}

void EndLiveRespBody::Swap(EndLiveRespBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndLiveRespBody::InternalSwap(EndLiveRespBody* other) {
  std::swap(time_, other->time_);
  std::swap(liveid_, other->liveid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndLiveRespBody::GetMetadata() const {
  protobuf_main_2fresources_2fchat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_main_2fresources_2fchat_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EndLiveRespBody

// int64 time = 1;
void EndLiveRespBody::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 EndLiveRespBody::time() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.EndLiveRespBody.time)
  return time_;
}
void EndLiveRespBody::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.EndLiveRespBody.time)
}

// int64 liveid = 2;
void EndLiveRespBody::clear_liveid() {
  liveid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 EndLiveRespBody::liveid() const {
  // @@protoc_insertion_point(field_get:org.tio.examples.im.common.packets.EndLiveRespBody.liveid)
  return liveid_;
}
void EndLiveRespBody::set_liveid(::google::protobuf::int64 value) {
  
  liveid_ = value;
  // @@protoc_insertion_point(field_set:org.tio.examples.im.common.packets.EndLiveRespBody.liveid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace packets
}  // namespace common
}  // namespace im
}  // namespace examples
}  // namespace aio
}  // namespace talent
}  // namespace com

// @@protoc_insertion_point(global_scope)
